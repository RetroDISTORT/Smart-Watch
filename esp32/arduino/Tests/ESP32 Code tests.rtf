{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi0\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\f38\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}
{\f43\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0502040204020203}Segoe UI;}{\f44\fbidi \froman\fcharset0\fprq0{\*\panose 00000000000000000000}&quot{\*\falt Cambria};}
{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f597\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\f598\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\f600\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f601\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f602\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f603\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f604\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f605\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f617\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}
{\f618\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}{\f620\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f621\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f622\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f623\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f624\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f625\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f937\fbidi \froman\fcharset238\fprq2 Cambria Math CE;}
{\f938\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}{\f940\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}{\f941\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}{\f944\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;}
{\f945\fbidi \froman\fcharset163\fprq2 Cambria Math (Vietnamese);}{\f967\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\f968\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\f970\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}
{\f971\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\f972\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\f973\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\f974\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\f975\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\f977\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}{\f978\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}{\f980\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}
{\f981\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}{\f982\fbidi \fswiss\fcharset177\fprq2 Calibri Light (Hebrew);}{\f983\fbidi \fswiss\fcharset178\fprq2 Calibri Light (Arabic);}{\f984\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}
{\f985\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}{\f1027\fbidi \fswiss\fcharset238\fprq2 Segoe UI CE;}{\f1028\fbidi \fswiss\fcharset204\fprq2 Segoe UI Cyr;}{\f1030\fbidi \fswiss\fcharset161\fprq2 Segoe UI Greek;}
{\f1031\fbidi \fswiss\fcharset162\fprq2 Segoe UI Tur;}{\f1032\fbidi \fswiss\fcharset177\fprq2 Segoe UI (Hebrew);}{\f1033\fbidi \fswiss\fcharset178\fprq2 Segoe UI (Arabic);}{\f1034\fbidi \fswiss\fcharset186\fprq2 Segoe UI Baltic;}
{\f1035\fbidi \fswiss\fcharset163\fprq2 Segoe UI (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}
{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}
{\fhimajor\f31533\fbidi \fswiss\fcharset177\fprq2 Calibri Light (Hebrew);}{\fhimajor\f31534\fbidi \fswiss\fcharset178\fprq2 Calibri Light (Arabic);}{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}
{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}
{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}
{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}
{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;\red0\green0\blue0;\red0\green0\blue0;\caccentone\ctint255\cshade191\red47\green84\blue150;\red34\green34\blue34;\red0\green102\blue153;\red0\green130\blue0;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap 
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\af0\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\s1\ql \li0\ri0\sb240\sl259\slmult1
\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 \fs32\cf19\lang1033\langfe1033\loch\f31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 \slink15 \sqformat \spriority9 \styrsid8723897 heading 1;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext11 \ssemihidden \sunhideused 
Normal Table;}{\*\cs15 \additive \rtlch\fcs1 \af0\afs32 \ltrch\fcs0 \fs32\cf19\loch\f31502\hich\af31502\dbch\af31501 \sbasedon10 \slink1 \slocked \spriority9 \styrsid8723897 Heading 1 Char;}{
\s16\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af43\afs18\alang1025 \ltrch\fcs0 \fs18\lang1033\langfe1033\loch\f43\hich\af43\dbch\af31505\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext16 \slink17 \ssemihidden \sunhideused \styrsid8723897 Balloon Text;}{\*\cs17 \additive \rtlch\fcs1 \af43\afs18 \ltrch\fcs0 \f43\fs18 \sbasedon10 \slink16 \slocked \ssemihidden \styrsid8723897 Balloon Text Char;}{\*\cs18 \additive 
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20 \sbasedon10 \ssemihidden \sunhideused \styrsid15538803 HTML Code;}}{\*\revtbl {Unknown;}}{\*\pgptbl {\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}}{\*\rsidtbl \rsid345736\rsid1578700\rsid2717315\rsid3364407\rsid3549860\rsid5526119\rsid5833313
\rsid6037358\rsid6584938\rsid6645915\rsid7028035\rsid7297462\rsid7693851\rsid7959982\rsid8723897\rsid9182093\rsid9316182\rsid10618000\rsid11215808\rsid11497645\rsid14491986\rsid14629420\rsid14687717\rsid15037532\rsid15490038\rsid15538803\rsid15541547
\rsid15746950\rsid16677273}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator Daniel Garcia Carrillo}{\creatim\yr2017\mo9\dy23\hr20\min46}
{\revtim\yr2021\mo8\dy23\hr11\min28}{\version13}{\edmins8664}{\nofpages3}{\nofwords7177}{\nofchars40915}{\nofcharsws47997}{\vern29}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale130\rsidroot8723897 \nouicompat \fet0{\*\wgrffmtfilter 2450}\nofeaturethrottle1\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1
\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid7959982 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid7959982 \hich\af31502\dbch\af31501\loch\f31502 Spea\hich\af31502\dbch\af31501\loch\f31502 ker
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7959982 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid7959982 \hich\af31506\dbch\af31505\loch\f31506 #include "Arduino.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "WiFi.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "Audio.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "SD.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "FS.h"
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // Digital I/O used
\par \hich\af31506\dbch\af31505\loch\f31506 #define SD_CS          5
\par \hich\af31506\dbch\af31505\loch\f31506 #define SPI_MOSI      23
\par \hich\af31506\dbch\af31505\loch\f31506 #define SPI_MISO      19
\par \hich\af31506\dbch\af31505\loch\f31506 #define SPI_SCK       18
\par \hich\af31506\dbch\af31505\loch\f31506 /*/BOARD
\par \hich\af31506\dbch\af31505\loch\f31506 #define I2S_DOUT      21
\par \hich\af31506\dbch\af31505\loch\f31506 #define I2S_BCLK      26
\par \hich\af31506\dbch\af31505\loch\f31506 #define I2S_LRC       25
\par \hich\af31506\dbch\af31505\loch\f31506 //WATCH*/
\par \hich\af31506\dbch\af31505\loch\f31506 #define I2S_BCLK      26
\par \hich\af31506\dbch\af31505\loch\f31506 #define I2S_LRC       25
\par \hich\af31506\dbch\af31505\loch\f31506 #define I2S_DOUT      13
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 Audio audio\hich\af31506\dbch\af31505\loch\f31506 ;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 String ssid ="NETGEAR26"; //"FRCCStudent";//
\par \hich\af31506\dbch\af31505\loch\f31506 String password = "magicalrabbit239"; //"";
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void setup() \{
\par \hich\af31506\dbch\af31505\loch\f31506   pinMode(33, OUTPUT);
\par \hich\af31506\dbch\af31505\loch\f31506   digitalWrite(33, HIGH); 
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par \hich\af31506\dbch\af31505\loch\f31506     //SPI.begin(SPI_SCK, SPI_MISO, SPI_MOSI);
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.begin(115200);
\par \hich\af31506\dbch\af31505\loch\f31506      Serial.println("DEBUG 1");
\par \hich\af31506\dbch\af31505\loch\f31506     //SD.begin(SD_CS);
\par \hich\af31506\dbch\af31505\loch\f31506     WiFi.disconnect();
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.println("DEBUG 2");
\par \hich\af31506\dbch\af31505\loch\f31506     WiFi.mode(WIFI_STA);
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.println("DEBUG 3");
\par \hich\af31506\dbch\af31505\loch\f31506     WiFi.begin(ssid\hich\af31506\dbch\af31505\loch\f31506 .c_str(), password.c_str());
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.println("DEBUG 4");
\par \hich\af31506\dbch\af31505\loch\f31506     while (WiFi.status() != WL_CONNECTED) delay(1500);
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.println("DEBUG 5");
\par \hich\af31506\dbch\af31505\loch\f31506     audio.setPinout(I2S_BCLK, I2S_LRC, I2S_DOUT);
\par \hich\af31506\dbch\af31505\loch\f31506     audio.setVolume(15); // 0...21
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     //audio.connecttoSD(\hich\af31506\dbch\af31505\loch\f31506 "/320k_test.mp3");
\par \hich\af31506\dbch\af31505\loch\f31506     //audio.connecttohost("www.wdr.de/wdrlive/media/einslive.m3u");
\par \hich\af31506\dbch\af31505\loch\f31506     //audio.connecttohost("dg-ais-eco-http-fra-eco-cdn.cast.addradio.de/hellwegradio/west/mp3/high");
\par \hich\af31506\dbch\af31505\loch\f31506     audio.connecttohost("fischkopp.stream.laut.fm/fischkopp");
\par \hich\af31506\dbch\af31505\loch\f31506     \hich\af31506\dbch\af31505\loch\f31506 //audio.connecttospeech("Im tired of this class", "de");
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void loop()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506     audio.loop();
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // optional
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_info(const char *info)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("info        "); Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_id3data(const char *info)\{  //id3 metadata
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("id3data     ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_eof_mp3(const char *info)\{  //end of file
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("eof_mp3     ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_showstation(const char *\hich\af31506\dbch\af31505\loch\f31506 info)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("station     ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_showstreaminfo(const char *info)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("streaminfo  ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_showstreamtitle(const char *info)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("streamtitle ");Serial.prin\hich\af31506\dbch\af31505\loch\f31506 tln(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_bitrate(const char *info)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("bitrate     ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_commercial(const char *info)\{  //duration in sec
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("commercial  ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_icyurl(const char *i\hich\af31506\dbch\af31505\loch\f31506 nfo)\{  //homepage
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("icyurl      ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_lasthost(const char *info)\{  //stream URL played
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("lasthost    ");Serial.println(info);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void audio_eof_speech(const char *info)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("eof_speech  ");Serial.println(info);
\par \}}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid7959982\charrsid7959982 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid11215808 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11215808 \hich\af31502\dbch\af31501\loch\f31502 INA219}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid11215808\charrsid11215808 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15746950 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid15746950 \hich\af31506\dbch\af31505\loch\f31506 #include <Wire.h>
\par \hich\af31506\dbch\af31505\loch\f31506 #include <Adafruit_INA219.h>
\par \hich\af31506\dbch\af31505\loch\f31506 #include "esp32-hal-cpu.h"
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 Adafruit_INA219 ina219;
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void setup(void) 
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.begin(115200);
\par \hich\af31506\dbch\af31505\loch\f31506   while (!Serial) \{
\par \hich\af31506\dbch\af31505\loch\f31506       // will pause Zero, Leonardo, etc until serial console opens
\par \hich\af31506\dbch\af31505\loch\f31506       delay(1);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println("Default Freq: " + String(getCpuFrequencyMhz()));
\par \hich\af31506\dbch\af31505\loch\f31506   setCpuFrequencyMhz(80); //Set CPU clock to 80MHz fo exa\hich\af31506\dbch\af31505\loch\f31506 mple
\par \hich\af31506\dbch\af31505\loch\f31506   esp_bt_controller_disable();
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println("New Freq: " + String(getCpuFrequencyMhz()));
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506    Wire.begin(27,14);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   uint32_t currentFrequency;
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506   // Initialize the INA219.
\par \hich\af31506\dbch\af31505\loch\f31506   // By default the initialization will use the largest range (32V, 2A)\hich\af31506\dbch\af31505\loch\f31506 .  However
\par \hich\af31506\dbch\af31505\loch\f31506   // you can call a setCalibration function to change this range (see comments).
\par \hich\af31506\dbch\af31505\loch\f31506   if (! ina219.begin()) \{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.println("Failed to find INA219 chip");
\par \hich\af31506\dbch\af31505\loch\f31506     while (1) \{ delay(10); \}
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \hich\af31506\dbch\af31505\loch\f31506   // To use a slightly lower 32V, 1A range (higher precision on amps):
\par \hich\af31506\dbch\af31505\loch\f31506   //ina219.setCalibration_32V_1A();
\par \hich\af31506\dbch\af31505\loch\f31506   // Or to use a lower 16V, 400mA range (higher precision on volts and amps):
\par \hich\af31506\dbch\af31505\loch\f31506   //ina219.setCalibration_16V_400mA();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println("Measuring vol\hich\af31506\dbch\af31505\loch\f31506 tage and current with INA219 ...");
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void loop(void) 
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506   float shuntvoltage = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   float busvoltage = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   float current_mA = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   float loadvoltage = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   float power_mW = 0;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   shuntvoltage = ina219.getShuntVoltage_mV();
\par \hich\af31506\dbch\af31505\loch\f31506   busvoltage = ina219.getBusVo\hich\af31506\dbch\af31505\loch\f31506 ltage_V();
\par \hich\af31506\dbch\af31505\loch\f31506   current_mA = ina219.getCurrent_mA();
\par \hich\af31506\dbch\af31505\loch\f31506   power_mW = ina219.getPower_mW();
\par \hich\af31506\dbch\af31505\loch\f31506   loadvoltage = busvoltage + (shuntvoltage / 1000);
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Bus Voltage:   "); Serial.print(busvoltage); Serial.println(" V");
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Shunt Voltage: ")\hich\af31506\dbch\af31505\loch\f31506 ; Serial.print(shuntvoltage); Serial.println(" mV");
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Load Voltage:  "); Serial.print(loadvoltage); Serial.println(" V");
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Current:       "); Serial.print(current_mA); Serial.println(" mA");
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Power:         "); \hich\af31506\dbch\af31505\loch\f31506 Serial.print(power_mW); Serial.println(" mW");
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println("");
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   delay(2000);
\par \}}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid11215808\charrsid11215808 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid14687717 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid14687717 \hich\af31502\dbch\af31501\loch\f31502 GYRO TEST
\par }\pard\plain \ltrpar\ql \li0\ri0\sl248\slmult0\widctlpar\wrapdefault\aspalpha\aspnum\faroman\adjustright\rin0\lin0\itap0\pararsid15538803 \cbpat8 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 
#include <MPU9250_asukiaaa.h>}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 #ifdef _ESP32_HAL_I2C_H_}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 #define SDA_PIN 21}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 #define SCL_PIN 22}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 #endif}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 MPU9250 mySensor;}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \ab\af2\afs23 \ltrch\fcs0 \b\f44\fs23\cf21\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 void}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 setup() \{}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 
\f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \ab\af2\afs23 \ltrch\fcs0 \b\f44\fs23\cf21\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 while}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 (!Serial);}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.begin(115200);}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "started"}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 );}{\rtlch\fcs1 \af0\afs23 
\ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 #ifdef _ESP32_HAL_I2C_H_}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf22\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 // for esp32}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Wire.begin(SDA_PIN, SCL_PIN); }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf22\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 //sda, scl}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 #else}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Wire.begin();}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf15\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 #endif}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 mySensor.setWire(&Wire);}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 mySensor.beginAccel();}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 mySensor.beginMag();}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf22\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 // you can set your own offset for mag values}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 
\f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf22\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 // mySensor.magXOffset = -50;}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 
\f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf22\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 // mySensor.magYOffset = -55;}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 
\f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf22\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 // mySensor.magZOffset = -10;}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 
\f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \}}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \ab\af2\afs23 \ltrch\fcs0 \b\f44\fs23\cf21\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 void}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 loop() \{}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 
\f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 mySensor.accelUpdate();}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "print accel values"}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 );}{\rtlch\fcs1 
\af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "accelX: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.accelX()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "accelY: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.accelY()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "accelZ: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.accelZ()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "accelSqrt: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1
\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.accelSqrt()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 mySensor.magUpdate();}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 

\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Se\hich\af44\dbch\af31505\loch\f44 rial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "print mag values"}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 );}{
\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "magX: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.magX()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "maxY: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.magY()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "magZ: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.magZ()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "horizontal direction: "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 
\f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(mySensor.magHoriz\hich\af44\dbch\af31505\loch\f44 Direction()));}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 
\f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par \~
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 Serial.println(}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 
\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 "at "}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44  }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr
\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 + String(millis()) + }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf2\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 
"ms"}{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 );}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \hich\af44\dbch\af31505\loch\f44 delay(500);}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }{\rtlch\fcs1 \af2\afs23 \ltrch\fcs0 \f44\fs23\cf1\chbrdr\brdrnone\brdrframe1 \insrsid15538803\charrsid15538803 \}}{\rtlch\fcs1 \af0\afs23 \ltrch\fcs0 \f44\fs23\cf20\insrsid15538803\charrsid15538803 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid14687717 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid3364407 \hich\af31502\dbch\af31501\loch\f31502 I2C Test
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3364407 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid3364407\charrsid3364407 \hich\af31506\dbch\af31505\loch\f31506 #include <Wire.h>
\par \hich\af31506\dbch\af31505\loch\f31506 void setup()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506 Serial.begin(115200);
\par \hich\af31506\dbch\af31505\loch\f31506 Serial.println("\\nI2C Scanner");}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid3364407 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313\charrsid5833313 \hich\af31506\dbch\af31505\loch\f31506 pinMode(}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313 \hich\af31506\dbch\af31505\loch\f31506 21}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313\charrsid5833313 \hich\af31506\dbch\af31505\loch\f31506 , OUTPUT);}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313\charrsid5833313 \hich\af31506\dbch\af31505\loch\f31506 digitalWrite(}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313 \hich\af31506\dbch\af31505\loch\f31506 21}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313\charrsid5833313 \hich\af31506\dbch\af31505\loch\f31506 , HIGH);}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid5833313\charrsid3364407 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid3364407\charrsid3364407 \hich\af31506\dbch\af31505\loch\f31506 Wire.begin(}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid2717315 \hich\af31506\dbch\af31505\loch\f31506 27,14}
{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid3364407\charrsid3364407 \hich\af31506\dbch\af31505\loch\f31506 );
\par \hich\af31506\dbch\af31505\loch\f31506 Serial.println("\\nI2C Scan Start!");
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void loop()
\par \{
\par \hich\af31506\dbch\af31505\loch\f31506  byte error, address;
\par \hich\af31506\dbch\af31505\loch\f31506  int nDevices;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506  Serial.println("Scanning...");
\par 
\par \hich\af31506\dbch\af31505\loch\f31506  nDevices = 0;
\par \hich\af31506\dbch\af31505\loch\f31506  for(address = 1; address < 127; address++ ) 
\par \hich\af31506\dbch\af31505\loch\f31506  \{
\par \hich\af31506\dbch\af31505\loch\f31506   // The i2c_scanner uses the return value of
\par \hich\af31506\dbch\af31505\loch\f31506   // the Write.endTransmisstion to see if
\par \hich\af31506\dbch\af31505\loch\f31506   // a device did a\hich\af31506\dbch\af31505\loch\f31506 cknowledge to the address.
\par \hich\af31506\dbch\af31505\loch\f31506   Wire.beginTransmission(address);
\par \hich\af31506\dbch\af31505\loch\f31506   error = Wire.endTransmission();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   if (error == 0)
\par \hich\af31506\dbch\af31505\loch\f31506   \{
\par \hich\af31506\dbch\af31505\loch\f31506    Serial.print("I2C device found at address 0x");
\par \hich\af31506\dbch\af31505\loch\f31506    if (address<16) 
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("0");
\par \hich\af31506\dbch\af31505\loch\f31506    Serial.print(address,HEX);
\par \hich\af31506\dbch\af31505\loch\f31506    Serial.println(" !");
\par 
\par \hich\af31506\dbch\af31505\loch\f31506    nDevices++;
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \hich\af31506\dbch\af31505\loch\f31506   else if (error==4) 
\par \hich\af31506\dbch\af31505\loch\f31506   \{
\par \hich\af31506\dbch\af31505\loch\f31506    Serial.print("Unknown error at address 0x");
\par \hich\af31506\dbch\af31505\loch\f31506    if (address<16) 
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("0");
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(address,HEX);
\par \}\hich\af31506\dbch\af31505\loch\f31506   
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 if (nDevices == 0)
\par \hich\af31506\dbch\af31505\loch\f31506 Serial.p\hich\af31506\dbch\af31505\loch\f31506 rintln("No I2C devices found\\n");
\par \hich\af31506\dbch\af31505\loch\f31506 else
\par \hich\af31506\dbch\af31505\loch\f31506 Serial.println("done\\n");
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 delay(5000);      // wait 5 seconds for next scan
\par \}
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid14687717 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid14687717 \hich\af31502\dbch\af31501\loch\f31502 COMPASS
\par }\pard\plain \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37 #include <Wire.h> //I2C Arduino Library
\par 
\par \hich\af37\dbch\af31505\loch\f37 #define address 0x1E //0011110b, I2C 7bit address of HMC5883
\par 
\par \hich\af37\dbch\af31505\loch\f37 void setup() \{
\par \hich\af37\dbch\af31505\loch\f37   pinMode(21, OUTPUT);
\par \hich\af37\dbch\af31505\loch\f37   delay(100);
\par \hich\af37\dbch\af31505\loch\f37   digitalWrite(21, HIGH);
\par \hich\af37\dbch\af31505\loch\f37   delay(200);
\par \hich\af37\dbch\af31505\loch\f37   Serial.begin(115200);
\par \hich\af37\dbch\af31505\loch\f37   Serial.println("START!");
\par \hich\af37\dbch\af31505\loch\f37   Wire.begin(18, 19);
\par 
\par \hich\af37\dbch\af31505\loch\f37   //Put the HMC5883 IC into the correct operating mode
\par \hich\af37\dbch\af31505\loch\f37   Wire.beginTransmission(address); //open communi\hich\af37\dbch\af31505\loch\f37 cation with HMC5883
\par \hich\af37\dbch\af31505\loch\f37   Wire.write(0x02); //select mode register
\par \hich\af37\dbch\af31505\loch\f37   Wire.write(0x00); //continuous measurement mode
\par \hich\af37\dbch\af31505\loch\f37   Wire.endTransmission();
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 void loop() \{
\par 
\par \hich\af37\dbch\af31505\loch\f37   int x, y, z; //triple axis data
\par 
\par \hich\af37\dbch\af31505\loch\f37   //Tell the HMC5883L where to begin reading data
\par \hich\af37\dbch\af31505\loch\f37   Wire.beginTr\hich\af37\dbch\af31505\loch\f37 ansmission(address);
\par \hich\af37\dbch\af31505\loch\f37   Wire.write(0x03);//select register 3, X MSB register
\par \hich\af37\dbch\af31505\loch\f37   Wire.endTransmission();
\par 
\par \hich\af37\dbch\af31505\loch\f37   //Read data from each axis, 2 registers per axis
\par \hich\af37\dbch\af31505\loch\f37 Wire.requestFrom(address, 6);
\par \hich\af37\dbch\af31505\loch\f37 if (6 <= Wire.available()) \{
\par \hich\af37\dbch\af31505\loch\f37 x  =  Wire.read() << 8; //X msb
\par \hich\af37\dbch\af31505\loch\f37 x  |=  Wire.read(); //X lsb
\par \hich\af37\dbch\af31505\loch\f37 z  =  Wire.read() << 8; //Z msb
\par \hich\af37\dbch\af31505\loch\f37 z  |=  Wire.read(); //Z lsb
\par \hich\af37\dbch\af31505\loch\f37 y  =  Wire.read() << 8; //Y msb
\par \hich\af37\dbch\af31505\loch\f37 y  |=  Wire.read(); //Y lsb
\par \hich\af37\dbch\af31505\loch\f37   \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 //Print out values of each axis
\par \hich\af37\dbch\af31505\loch\f37 Serial.print("x: ");
\par \hich\af37\dbch\af31505\loch\f37 Serial.print(x);
\par \hich\af37\dbch\af31505\loch\f37 Serial.print("  y: ");
\par \hich\af37\dbch\af31505\loch\f37 Serial.pri\hich\af37\dbch\af31505\loch\f37 nt(y);
\par \hich\af37\dbch\af31505\loch\f37 Serial.print("  z: ");
\par \hich\af37\dbch\af31505\loch\f37 Serial.println(z);
\par 
\par \hich\af37\dbch\af31505\loch\f37 delay(250);
\par \}
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid14687717 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid14687717 \hich\af31502\dbch\af31501\loch\f31502 OLED 3D CUBE DISPLAY TEST (FAILED)}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid8723897 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37 /*
\par \hich\af37\dbch\af31505\loch\f37   Draws a 3d rotating cube on the freetronics OLED screen.
\par \hich\af37\dbch\af31505\loch\f37   Original code was found at }{\field{\*\fldinst {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37 
HYPERLINK http://forum.freetronics.com/viewtopic.php?f=37&t=5495 }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid8723897 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b8600000068007400740070003a002f002f0066006f00720075006d002e006600720065006500740072006f006e006900630073002e0063006f006d002f00760069006500770074006f007000690063002e0070006800
70003f0066003d0033003700260074003d0035003400390035000000795881f43b1d7f48af2c825dc485276300000000a5ab00030000002d7743820026}}}{\fldrslt {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37 
http://forum.freetronics.com/viewtopic.php?f=37&t=5495}}}\sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 
\par \hich\af37\dbch\af31505\loch\f37   Thanks to Adafruit at }{\field{\*\fldinst {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37 HYPERLINK http://www.adafruit.com }{\rtlch\fcs1 \af37 \ltrch\fcs0 
\f37\lang9\langfe1033\langnp9\insrsid8723897 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b4a00000068007400740070003a002f002f007700770077002e00610064006100660072007500690074002e0063006f006d002f000000795881f43b1d7f48af2c825dc485276300000000a5ab0003004eff6900330000
00}}}{\fldrslt {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37 http://www.adafruit.com}}}\sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af37 \ltrch\fcs0 
\f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37  for the great display and sensor libraries
\par \hich\af37\dbch\af31505\loch\f37 */
\par \hich\af37\dbch\af31505\loch\f37 #include <SPI.h>
\par \hich\af37\dbch\af31505\loch\f37 #include <Adafruit_SSD1306.h>
\par \hich\af37\dbch\af31505\loch\f37 #include <Adafruit_GFX.h>
\par \hich\af37\dbch\af31505\loch\f37 #include <Wire.h>
\par 
\par \hich\af37\dbch\af31505\loch\f37 //MPU
\par \hich\af37\dbch\af31505\loch\f37 const int MPU = 0x68; // I2C address of the MPU-6050
\par \hich\af37\dbch\af31505\loch\f37 int16_t AcX, AcY, AcZ, Tmp, GyX, GyY, GyZ;
\par 
\par \hich\af37\dbch\af31505\loch\f37 //Display
\par \hich\af37\dbch\af31505\loch\f37 #define OLED_RESET 4
\par \hich\af37\dbch\af31505\loch\f37 Adafruit_SSD1306 display(OLED_RESET);
\par 
\par \hich\af37\dbch\af31505\loch\f37 // OLED I2C bus address
\par \hich\af37\dbch\af31505\loch\f37 #define OLED_address  0x3c
\par 
\par \hich\af37\dbch\af31505\loch\f37 float xx, xy, xz;
\par \hich\af37\dbch\af31505\loch\f37 float yx, yy,\hich\af37\dbch\af31505\loch\f37  yz;
\par \hich\af37\dbch\af31505\loch\f37 float zx, zy, zz;
\par 
\par \hich\af37\dbch\af31505\loch\f37 float fact;
\par 
\par \hich\af37\dbch\af31505\loch\f37 int Xan, Yan;
\par 
\par \hich\af37\dbch\af31505\loch\f37 int Xoff;
\par \hich\af37\dbch\af31505\loch\f37 int Yoff;
\par \hich\af37\dbch\af31505\loch\f37 int Zoff;
\par 
\par \hich\af37\dbch\af31505\loch\f37 struct Point3d
\par \{
\par \hich\af37\dbch\af31505\loch\f37   int x;
\par \hich\af37\dbch\af31505\loch\f37   int y;
\par \hich\af37\dbch\af31505\loch\f37   int z;
\par \}\hich\af37\dbch\af31505\loch\f37 ;
\par 
\par \hich\af37\dbch\af31505\loch\f37 struct Point2d
\par \{
\par \hich\af37\dbch\af31505\loch\f37   int x;
\par \hich\af37\dbch\af31505\loch\f37   int y;
\par \}\hich\af37\dbch\af31505\loch\f37 ;
\par 
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 int LinestoRender; // lines to render.
\par \hich\af37\dbch\af31505\loch\f37 int OldLinestoRender; // lines to render just in case it changes. this makes sure the old lines all get erased.
\par 
\par \hich\af37\dbch\af31505\loch\f37 struct Line3d
\par \{
\par \hich\af37\dbch\af31505\loch\f37   Point3d p0;
\par \hich\af37\dbch\af31505\loch\f37   Point3d p1;
\par \}\hich\af37\dbch\af31505\loch\f37 ;
\par 
\par \hich\af37\dbch\af31505\loch\f37 struct Line2d
\par \{
\par \hich\af37\dbch\af31505\loch\f37   Point2d p0;
\par \hich\af37\dbch\af31505\loch\f37   Point2d p1;
\par \}\hich\af37\dbch\af31505\loch\f37 ;
\par 
\par \hich\af37\dbch\af31505\loch\f37 Line3d Lines[12];  //Number of lines to render
\par \hich\af37\dbch\af31505\loch\f37 Line2d Render[12];
\par \hich\af37\dbch\af31505\loch\f37 Line2d ORender[12];
\par 
\par \hich\af37\dbch\af31505\loch\f37 /***********************************************************************************************************************************/
\par \hich\af37\dbch\af31505\loch\f37 // Sets the global vars for the 3d transform. Any points sent through "process" will be transformed using these figures.
\par \hich\af37\dbch\af31505\loch\f37 /\hich\af37\dbch\af31505\loch\f37 / only needs to be called if Xan or Yan are changed.
\par \hich\af37\dbch\af31505\loch\f37 void SetVars(void)
\par \{
\par \hich\af37\dbch\af31505\loch\f37   float Xan2, Yan2, Zan2;
\par \hich\af37\dbch\af31505\loch\f37   float s1, s2, s3, c1, c2, c3;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Xan2 = Xan / fact; // convert degrees to radians.
\par \hich\af37\dbch\af31505\loch\f37   Yan2 = Yan / fact;
\par 
\par \hich\af37\dbch\af31505\loch\f37   // Zan is assumed to be zero
\par 
\par \hich\af37\dbch\af31505\loch\f37   s1 = sin(Yan2);
\par \hich\af37\dbch\af31505\loch\f37   s2 = sin(Xan2);
\par 
\par \hich\af37\dbch\af31505\loch\f37   c1 = cos(Yan2);
\par \hich\af37\dbch\af31505\loch\f37   c2 = cos(Xan2);
\par 
\par \hich\af37\dbch\af31505\loch\f37   xx = c1;
\par \hich\af37\dbch\af31505\loch\f37   xy = 0;
\par \hich\af37\dbch\af31505\loch\f37   xz = -s1;
\par 
\par \hich\af37\dbch\af31505\loch\f37   yx = (s1 * s2);
\par \hich\af37\dbch\af31505\loch\f37   yy = c2;
\par \hich\af37\dbch\af31505\loch\f37   yz = (c1 * s2);
\par 
\par \hich\af37\dbch\af31505\loch\f37   zx = (s1 * c2);
\par \hich\af37\dbch\af31505\loch\f37   zy = -s2;
\par \hich\af37\dbch\af31505\loch\f37   zz = (c1 * c2);
\par \}
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 /***********************************************************************************************************************************/
\par \hich\af37\dbch\af31505\loch\f37 // processes x1,y1,z1 and returns rx1,ry1 transformed by the variables set in SetVars()
\par \hich\af37\dbch\af31505\loch\f37 // fairly heavy on floating point \hich\af37\dbch\af31505\loch\f37 here.
\par \hich\af37\dbch\af31505\loch\f37 // uses a bunch of global vars. Could be rewritten with a struct but not worth the effort.
\par \hich\af37\dbch\af31505\loch\f37 void ProcessLine(struct Line2d *ret, struct Line3d vec)
\par \{
\par \hich\af37\dbch\af31505\loch\f37   float zvt1;
\par \hich\af37\dbch\af31505\loch\f37   int xv1, yv1, zv1;
\par 
\par \hich\af37\dbch\af31505\loch\f37   float zvt2;
\par \hich\af37\dbch\af31505\loch\f37   int xv2, yv2, zv2;
\par 
\par \hich\af37\dbch\af31505\loch\f37   int rx1, ry1;
\par \hich\af37\dbch\af31505\loch\f37   int rx2, ry\hich\af37\dbch\af31505\loch\f37 2;
\par 
\par \hich\af37\dbch\af31505\loch\f37   int x1;
\par \hich\af37\dbch\af31505\loch\f37   int y1;
\par \hich\af37\dbch\af31505\loch\f37   int z1;
\par 
\par \hich\af37\dbch\af31505\loch\f37   int x2;
\par \hich\af37\dbch\af31505\loch\f37   int y2;
\par \hich\af37\dbch\af31505\loch\f37   int z2;
\par 
\par \hich\af37\dbch\af31505\loch\f37   int Ok;
\par 
\par \hich\af37\dbch\af31505\loch\f37   x1 = vec.p0.x;
\par \hich\af37\dbch\af31505\loch\f37   y1 = vec.p0.y;
\par \hich\af37\dbch\af31505\loch\f37   z1 = vec.p0.z;
\par 
\par \hich\af37\dbch\af31505\loch\f37   x2 = vec.p1.x;
\par \hich\af37\dbch\af31505\loch\f37   y2 = vec.p1.y;
\par \hich\af37\dbch\af31505\loch\f37   z2 = vec.p1.z;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Ok = 0; // defaults to not OK
\par 
\par \hich\af37\dbch\af31505\loch\f37   xv1 = (x1 * xx) + (y1 * xy) + (z1 * xz);
\par \hich\af37\dbch\af31505\loch\f37   yv1 = (x1 * yx) + (y1 * yy) + (z1 * yz);
\par \hich\af37\dbch\af31505\loch\f37   zv1 = (x1 * zx) + (y1 * zy) + (z1 * zz);
\par 
\par \hich\af37\dbch\af31505\loch\f37   zvt1 = zv1 - Zoff;
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   if ( zvt1 < -5) \{
\par \hich\af37\dbch\af31505\loch\f37     rx1 = 256 * (xv1 / zvt1) + Xoff;
\par \hich\af37\dbch\af31505\loch\f37     ry1 = 256 * (yv1 / zvt1) + Yoff;
\par \hich\af37\dbch\af31505\loch\f37     Ok = \hich\af37\dbch\af31505\loch\f37 1; // ok we are alright for point 1.
\par \hich\af37\dbch\af31505\loch\f37   \}
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   xv2 = (x2 * xx) + (y2 * xy) + (z2 * xz);
\par \hich\af37\dbch\af31505\loch\f37   yv2 = (x2 * yx) + (y2 * yy) + (z2 * yz);
\par \hich\af37\dbch\af31505\loch\f37   zv2 = (x2 * zx) + (y2 * zy) + (z2 * zz);
\par 
\par \hich\af37\dbch\af31505\loch\f37   zvt2 = zv2 - Zoff;
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   if ( zvt2 < -5) \{
\par \hich\af37\dbch\af31505\loch\f37     rx2 = 256 * (xv2 / zvt2) + Xoff;
\par \hich\af37\dbch\af31505\loch\f37     ry2 = 256 * (yv2 / zvt2) + Yoff;
\par \hich\af37\dbch\af31505\loch\f37   \} else
\par \hich\af37\dbch\af31505\loch\f37   \{
\par \hich\af37\dbch\af31505\loch\f37     Ok = 0;
\par \hich\af37\dbch\af31505\loch\f37   \}
\par 
\par \hich\af37\dbch\af31505\loch\f37   if (Ok == 1) \{
\par \hich\af37\dbch\af31505\loch\f37     ret->p0.x = rx1;
\par \hich\af37\dbch\af31505\loch\f37     ret->p0.y = ry1;
\par 
\par \hich\af37\dbch\af31505\loch\f37     ret->p1.x = rx2;
\par \hich\af37\dbch\af31505\loch\f37     ret->p1.y = ry2;
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   // The ifs here are checks for out of bounds\hich\af37\dbch\af31505\loch\f37 . needs a bit more code here to "safe" lines that will be way out of whack, so they dont get drawn and cause screen garbage.
\par 
\par \}
\par 
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 /***********************************************************************************************************************************/
\par \hich\af37\dbch\af31505\loch\f37 void setup() \{
\par \hich\af37\dbch\af31505\loch\f37   pinMode(21, OUTPUT);
\par \hich\af37\dbch\af31505\loch\f37   delay(100);
\par \hich\af37\dbch\af31505\loch\f37   digitalWrite(21, HIGH);
\par \hich\af37\dbch\af31505\loch\f37   delay(200);
\par \hich\af37\dbch\af31505\loch\f37   Serial.begin(115200);
\par \hich\af37\dbch\af31505\loch\f37   Seri\hich\af37\dbch\af31505\loch\f37 al.println("START!");
\par \hich\af37\dbch\af31505\loch\f37   Wire.begin(18, 19);
\par \hich\af37\dbch\af31505\loch\f37   Wire.begin(18, 19);
\par \hich\af37\dbch\af31505\loch\f37   display.begin(SSD1306_SWITCHCAPVCC, 0x78);  // initialize with the I2C addr 0x3D (for the 128x64)
\par \hich\af37\dbch\af31505\loch\f37   display.clearDisplay();   // clears the screen and buffer
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   Wire.begin(18, 19);
\par 
\par \hich\af37\dbch\af31505\loch\f37   fac\hich\af37\dbch\af31505\loch\f37 t = 180 / 3.14159265358979323846264338327950; // conversion from degrees to radians.
\par 
\par \hich\af37\dbch\af31505\loch\f37   Xoff = 90; // positions the center of the 3d conversion space into the center of the OLED screen. This is usally screen_x_size / 2.
\par \hich\af37\dbch\af31505\loch\f37   Yoff = 32; // screen_y_size /2
\par \hich\af37\dbch\af31505\loch\f37   Z\hich\af37\dbch\af31505\loch\f37 off = 750;   //Size of cube, larger no. = smaller cube
\par 
\par \hich\af37\dbch\af31505\loch\f37   // line segments to draw a cube. basically p0 to p1. p1 to p2. p2 to p3 so on.
\par 
\par \hich\af37\dbch\af31505\loch\f37   // Front Face.
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[0].p0.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[0].p0.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[0].p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[0].p1.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[0].p1.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[0].p1.z = 50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[1].p0.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[1].p0.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[1].p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[1].p1.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[1].p1.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[1].p1.z = 50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[2].p0.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[2].p0.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[2]\hich\af37\dbch\af31505\loch\f37 .p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[2].p1.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[2].p1.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[2].p1.z = 50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[3].p0.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[3].p0.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[3].p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[3].p1.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[3].p1.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[3].p1.z = 50;
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   //back face.
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[4].p0.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[4].p0.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[4].p0.z = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[4].p1.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[4].p1.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[4].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[5].p0.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[5].p0.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[5].p0.z = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[5].p1.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[5].p1.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Line\hich\af37\dbch\af31505\loch\f37 s[5].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[6].p0.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[6].p0.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[6].p0.z = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[6].p1.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[6].p1.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[6].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[7].p0.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[7].p0.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[7].p0.z = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[7].p1.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[7].\hich\af37\dbch\af31505\loch\f37 p1.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[7].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   // now the 4 edge lines.
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[8].p0.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[8].p0.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[8].p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[8].p1.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[8].p1.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[8].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[9].p0.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[9].p0.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[9].p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[9].p1.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[9].p1.y = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[9].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[10].p0.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[10].p0.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[10].p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[10].p1.x = -50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[10].p1.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[10].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   Lines[11].p0.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[11].p0.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[11].p0.z = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[11].p1.x = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[11].p1.y = 50;
\par \hich\af37\dbch\af31505\loch\f37   Lines[11].p1.z = -50;
\par 
\par \hich\af37\dbch\af31505\loch\f37   LinestoRender = 12;
\par \hich\af37\dbch\af31505\loch\f37   OldLinestoRender = LinestoRender;
\par 
\par \hich\af37\dbch\af31505\loch\f37   // Initialize MPU
\par \hich\af37\dbch\af31505\loch\f37   Wire.beginTransmission(MPU);
\par \hich\af37\dbch\af31505\loch\f37   Wire.write(0x6B);  // PWR_MGMT_1 register
\par \hich\af37\dbch\af31505\loch\f37   Wire.write(0);     // set to zero (wakes up the MPU-6050)
\par \hich\af37\dbch\af31505\loch\f37   Wire.endTransmission(true);
\par 
\par \}
\par \hich\af37\dbch\af31505\loch\f37 /***************************************************************************************\hich\af37\dbch\af31505\loch\f37 ********************************************/
\par \hich\af37\dbch\af31505\loch\f37 void RenderImage( void)
\par \{
\par \hich\af37\dbch\af31505\loch\f37   // renders all the lines after erasing the old ones.
\par \hich\af37\dbch\af31505\loch\f37   // in here is the only code actually interfacing with the OLED. so if you use a different lib, this is where to change it.
\par 
\par \hich\af37\dbch\af31505\loch\f37   f\hich\af37\dbch\af31505\loch\f37 or (int i = 0; i < OldLinestoRender; i++ )
\par \hich\af37\dbch\af31505\loch\f37   \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(ORender[i].p0.x, ORender[i].p0.y, ORender[i].p1.x, ORender[i].p1.y, BLACK); // erase the old lines.
\par \hich\af37\dbch\af31505\loch\f37   \}
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   for (int i = 0; i < LinestoRender; i++ )
\par \hich\af37\dbch\af31505\loch\f37   \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(Render[i].p0.x\hich\af37\dbch\af31505\loch\f37 , Render[i].p0.y, Render[i].p1.x, Render[i].p1.y, WHITE);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   OldLinestoRender = LinestoRender;
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   Wire.beginTransmission(MPU);
\par \hich\af37\dbch\af31505\loch\f37   Wi\hich\af37\dbch\af31505\loch\f37 re.write(0x3B);  // starting with register 0x3B (ACCEL_XOUT_H)
\par \hich\af37\dbch\af31505\loch\f37   Wire.endTransmission(true);
\par \hich\af37\dbch\af31505\loch\f37   Wire.requestFrom(MPU, 14, true); // request a total of 14 registers
\par \hich\af37\dbch\af31505\loch\f37   AcX = Wire.read() << 8 | Wire.read(); // 0x3B (ACCEL_XOUT_H) & 0x3C (ACCEL_XOUT_L)
\par \hich\af37\dbch\af31505\loch\f37   AcY = \hich\af37\dbch\af31505\loch\f37 Wire.read() << 8 | Wire.read(); // 0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)
\par \hich\af37\dbch\af31505\loch\f37   AcZ = Wire.read() << 8 | Wire.read(); // 0x3F (ACCEL_ZOUT_H) & 0x40 (ACCEL_ZOUT_L)
\par \hich\af37\dbch\af31505\loch\f37   Tmp = Wire.read() << 8 | Wire.read(); // 0x41 (TEMP_OUT_H) & 0x42 (TEMP_OUT_L)
\par \hich\af37\dbch\af31505\loch\f37   GyX = Wire.\hich\af37\dbch\af31505\loch\f37 read() << 8 | Wire.read(); // 0x43 (GYRO_XOUT_H) & 0x44 (GYRO_XOUT_L)
\par \hich\af37\dbch\af31505\loch\f37   GyY = Wire.read() << 8 | Wire.read(); // 0x45 (GYRO_YOUT_H) & 0x46 (GYRO_YOUT_L)
\par \hich\af37\dbch\af31505\loch\f37   GyZ = Wire.read() << 8 | Wire.read(); // 0x47 (GYRO_ZOUT_H) & 0x48 (GYRO_ZOUT_L)
\par \hich\af37\dbch\af31505\loch\f37   // text display te\hich\af37\dbch\af31505\loch\f37 sts
\par \hich\af37\dbch\af31505\loch\f37   display.setTextSize(1);
\par \hich\af37\dbch\af31505\loch\f37   display.setTextColor(WHITE);
\par \hich\af37\dbch\af31505\loch\f37   display.setCursor(0, 0);
\par \hich\af37\dbch\af31505\loch\f37   //Display ACC
\par \hich\af37\dbch\af31505\loch\f37   display.print("AcX: ");
\par \hich\af37\dbch\af31505\loch\f37   display.println(AcX);
\par \hich\af37\dbch\af31505\loch\f37   display.print("AcY: ");
\par \hich\af37\dbch\af31505\loch\f37   display.println(AcY);
\par \hich\af37\dbch\af31505\loch\f37   //Display gyro
\par \hich\af37\dbch\af31505\loch\f37   display.print("GyX: ");
\par \hich\af37\dbch\af31505\loch\f37   display\hich\af37\dbch\af31505\loch\f37 .println(GyX);
\par \hich\af37\dbch\af31505\loch\f37   display.print("GyY: ");
\par \hich\af37\dbch\af31505\loch\f37   display.println(GyY);
\par \hich\af37\dbch\af31505\loch\f37   //delay(10);
\par \}
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 /***********************************************************************************************************************************/
\par 
\par \hich\af37\dbch\af31505\loch\f37 void loop() \{
\par \hich\af37\dbch\af31505\loch\f37   display.display();
\par \hich\af37\dbch\af31505\loch\f37   display.clearDisplay();   // clears the screen and buffer
\par 
\par \hich\af37\dbch\af31505\loch\f37   // PIX=GREEN; // colour\hich\af37\dbch\af31505\loch\f37 s of all lines drawn will be green until changed.
\par 
\par \hich\af37\dbch\af31505\loch\f37   //For cube rotation
\par \hich\af37\dbch\af31505\loch\f37   int xOut = 0;
\par \hich\af37\dbch\af31505\loch\f37   int yOut = 0;
\par 
\par \hich\af37\dbch\af31505\loch\f37   xOut = map(AcX, -17000, 17000, -50, 50);
\par \hich\af37\dbch\af31505\loch\f37   yOut = map(AcY, -17000, 17000, -50, 50);
\par 
\par \hich\af37\dbch\af31505\loch\f37   Xan += xOut;
\par \hich\af37\dbch\af31505\loch\f37   Yan += yOut;
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   Yan = Yan % 360;
\par \hich\af37\dbch\af31505\loch\f37   Xan = Xan \hich\af37\dbch\af31505\loch\f37 % 360; // prevents overflow.
\par 
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37   SetVars(); //sets up the global vars to do the conversion.
\par 
\par \hich\af37\dbch\af31505\loch\f37   for (int i = 0; i < LinestoRender ; i++)
\par \hich\af37\dbch\af31505\loch\f37   \{
\par \hich\af37\dbch\af31505\loch\f37     ORen\hich\af37\dbch\af31505\loch\f37 der[i] = Render[i]; // stores the old line segment so we can delete it later.
\par \hich\af37\dbch\af31505\loch\f37     ProcessLine(&Render[i], Lines[i]); // converts the 3d line segments to 2d.
\par \hich\af37\dbch\af31505\loch\f37   \}
\par 
\par \hich\af37\dbch\af31505\loch\f37   RenderImage(); // go draw it!
\par 
\par \}
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid8723897 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid8723897 \hich\af31502\dbch\af31501\loch\f31502 OLED DISPLAY TEST}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid11497645 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid11497645 \hich\af37\dbch\af31505\loch\f37 /**
\par \hich\af37\dbch\af31505\loch\f37  * The MIT License (MIT)
\par \hich\af37\dbch\af31505\loch\f37  *
\par \hich\af37\dbch\af31505\loch\f37  * Copyri\hich\af37\dbch\af31505\loch\f37 ght (c) 2016 by Daniel Eichhorn
\par \hich\af37\dbch\af31505\loch\f37  * Copyright (c) 2016 by Fabrice Weinberg
\par \hich\af37\dbch\af31505\loch\f37  *
\par \hich\af37\dbch\af31505\loch\f37  * Permission is hereby granted, free of charge, to any person obtaining a copy
\par \hich\af37\dbch\af31505\loch\f37  * of this software and associated documentation files (the "Software"), to deal
\par \hich\af37\dbch\af31505\loch\f37  * in the Software\hich\af37\dbch\af31505\loch\f37  without restriction, including without limitation the rights
\par \hich\af37\dbch\af31505\loch\f37  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
\par \hich\af37\dbch\af31505\loch\f37  * copies of the Software, and to permit persons to whom the Software is
\par \hich\af37\dbch\af31505\loch\f37  * furnished to do so, subject to the follow\hich\af37\dbch\af31505\loch\f37 ing conditions:
\par \hich\af37\dbch\af31505\loch\f37  *
\par \hich\af37\dbch\af31505\loch\f37  * The above copyright notice and this permission notice shall be included in all
\par \hich\af37\dbch\af31505\loch\f37  * copies or substantial portions of the Software.
\par \hich\af37\dbch\af31505\loch\f37  *
\par \hich\af37\dbch\af31505\loch\f37  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
\par \hich\af37\dbch\af31505\loch\f37  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
\par \hich\af37\dbch\af31505\loch\f37  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
\par \hich\af37\dbch\af31505\loch\f37  * AUTHORS OR COPYRIGHT\hich\af37\dbch\af31505\loch\f37  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
\par \hich\af37\dbch\af31505\loch\f37  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
\par \hich\af37\dbch\af31505\loch\f37  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
\par \hich\af37\dbch\af31505\loch\f37  * SOFTWARE.
\par \hich\af37\dbch\af31505\loch\f37  *
\par \hich\af37\dbch\af31505\loch\f37  */
\par 
\par \hich\af37\dbch\af31505\loch\f37  // Include the correc\hich\af37\dbch\af31505\loch\f37 t display library
\par \hich\af37\dbch\af31505\loch\f37  // For a connection via I2C using Wire include
\par \hich\af37\dbch\af31505\loch\f37  #include <Wire.h>  // Only needed for Arduino 1.6.5 and earlier
\par \hich\af37\dbch\af31505\loch\f37  #include "SSD1306.h" // alias for `#include "SSD1306Wire.h"`
\par \hich\af37\dbch\af31505\loch\f37  // or #include "SH1106.h" alis for `#include "SH1106Wire.h"`
\par \hich\af37\dbch\af31505\loch\f37  \hich\af37\dbch\af31505\loch\f37 // For a connection via I2C using brzo_i2c (must be installed) include
\par \hich\af37\dbch\af31505\loch\f37  // #include <brzo_i2c.h> // Only needed for Arduino 1.6.5 and earlier
\par \hich\af37\dbch\af31505\loch\f37  // #include "SSD1306Brzo.h"
\par \hich\af37\dbch\af31505\loch\f37  // #include "SH1106Brzo.h"
\par \hich\af37\dbch\af31505\loch\f37  // For a connection via SPI include
\par \hich\af37\dbch\af31505\loch\f37  // #include <SPI.h>\hich\af37\dbch\af31505\loch\f37  // Only needed for Arduino 1.6.5 and earlier
\par \hich\af37\dbch\af31505\loch\f37  // #include "SSD1306Spi.h"
\par \hich\af37\dbch\af31505\loch\f37  // #include "SH1106SPi.h"
\par 
\par \hich\af37\dbch\af31505\loch\f37  // Use the corresponding display class:
\par 
\par \hich\af37\dbch\af31505\loch\f37  // Initialize the OLED display using SPI
\par \hich\af37\dbch\af31505\loch\f37  // D5 -> CLK
\par \hich\af37\dbch\af31505\loch\f37  // D7 -> MOSI (DOUT)
\par \hich\af37\dbch\af31505\loch\f37  // D0 -> RES
\par \hich\af37\dbch\af31505\loch\f37  // D2 -> DC
\par \hich\af37\dbch\af31505\loch\f37  // D8 -> CS
\par \hich\af37\dbch\af31505\loch\f37  // SSD1306Spi        display(D0, D2, D8);
\par \hich\af37\dbch\af31505\loch\f37  // or
\par \hich\af37\dbch\af31505\loch\f37  // SH1106Spi         display(D0, D2);
\par 
\par \hich\af37\dbch\af31505\loch\f37  // Initialize the OLED display using brzo_i2c
\par \hich\af37\dbch\af31505\loch\f37  // D3 -> SDA
\par \hich\af37\dbch\af31505\loch\f37  // D5 -> SCL
\par \hich\af37\dbch\af31505\loch\f37  // SSD1306Brzo display(0x3c, D3, D5);
\par \hich\af37\dbch\af31505\loch\f37  // or
\par \hich\af37\dbch\af31505\loch\f37  // SH1106Brzo  dis\hich\af37\dbch\af31505\loch\f37 play(0x3c, D3, D5);
\par 
\par \hich\af37\dbch\af31505\loch\f37  // Initialize the OLED display using Wire library
\par \hich\af37\dbch\af31505\loch\f37  SSD1306  display(0x3c, 5, 4);
\par \hich\af37\dbch\af31505\loch\f37  // SH1106 display(0x3c, D3, D5);
\par 
\par \hich\af37\dbch\af31505\loch\f37 // Adapted from Adafruit_SSD1306
\par \hich\af37\dbch\af31505\loch\f37 void drawLines() \{
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_WIDTH; i+=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(\hich\af37\dbch\af31505\loch\f37 0, 0, i, DISPLAY_HEIGHT-1);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_HEIGHT; i+=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(0, 0, DISPLAY_WIDTH-1, i);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   delay(250);
\par 
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_WIDTH; i+=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(0, DISPLAY_HEIGHT-1, i, 0);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=DISPLAY_HEIGHT-1; i>=0; i-=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(0, DISPLAY_HEIGHT-1, DISPLAY_WI\hich\af37\dbch\af31505\loch\f37 DTH-1, i);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   delay(250);
\par 
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=DISPLAY_WIDTH-1; i>=0; i-=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(DISPLAY_WIDTH-1, DISPLAY_HEIGHT-1, i, 0);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i\hich\af37\dbch\af31505\loch\f37 =DISPLAY_HEIGHT-1; i>=0; i-=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(DISPLAY_WIDTH-1, DISPLAY_HEIGHT-1, 0, i);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   delay(250);
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_HEIGHT; i+=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(DISPLAY_WIDTH-1, 0, 0, i);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_WIDTH; i+=4) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawLine(DISPLAY_WIDTH-1, 0, i, DISPLAY_HEIGHT-1);
\par \hich\af37\dbch\af31505\loch\f37     display.\hich\af37\dbch\af31505\loch\f37 display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   delay(250);
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 // Adapted from Adafruit_SSD1306
\par \hich\af37\dbch\af31505\loch\f37 void drawRect(void) \{
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_HEIGHT/2; i+=2) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawRect(i, i, DISPLAY_WIDTH-2*i, DISPLAY_HEIGHT-2*i);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37  \hich\af37\dbch\af31505\loch\f37  \}
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 // Adapted from Adafruit_SSD1306
\par \hich\af37\dbch\af31505\loch\f37 void fillRect(void) \{
\par \hich\af37\dbch\af31505\loch\f37   uint8_t color = 1;
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_HEIGHT/2; i+=3) \{
\par \hich\af37\dbch\af31505\loch\f37     display.setColor((color % 2 == 0) ? BLACK : WHITE); // alternate colors
\par \hich\af37\dbch\af31505\loch\f37     display.fillRect(i, i, DISPLAY_WIDTH - i*2, DISPLAY_HEIGHT - i*2);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37     color++;
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   // Reset back to WHITE
\par \hich\af37\dbch\af31505\loch\f37   display.setColor(WHITE);
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 // Adapted from Adafruit_SSD1306
\par \hich\af37\dbch\af31505\loch\f37 void drawCircle(void) \{
\par \hich\af37\dbch\af31505\loch\f37   for (int16_t i=0; i<DISPLAY_HEIGHT; i+=2) \{
\par \hich\af37\dbch\af31505\loch\f37     display.drawCircle(DISPLAY_WIDTH/2, DISPLAY_HEIGHT/2, i);
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(10);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \hich\af37\dbch\af31505\loch\f37   delay(1000);
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par 
\par \hich\af37\dbch\af31505\loch\f37   // This wil\hich\af37\dbch\af31505\loch\f37 l draw the part of the circel in quadrant 1
\par \hich\af37\dbch\af31505\loch\f37   // Quadrants are numberd like this:
\par \hich\af37\dbch\af31505\loch\f37   //   0010 | 0001
\par \hich\af37\dbch\af31505\loch\f37   //  ------|-----
\par \hich\af37\dbch\af31505\loch\f37   //   0100 | 1000
\par \hich\af37\dbch\af31505\loch\f37   //
\par \hich\af37\dbch\af31505\loch\f37   display.drawCircleQuads(DISPLAY_WIDTH/2, DISPLAY_HEIGHT/2, DISPLAY_HEIGHT/4, 0b00000001);
\par \hich\af37\dbch\af31505\loch\f37   display.display();
\par \hich\af37\dbch\af31505\loch\f37   delay(200);
\par \hich\af37\dbch\af31505\loch\f37   display.drawCircleQuads(DISPLAY_WIDTH/2, DISPLAY_HEIGHT/2, DISPLAY_HEIGHT/4, 0b00000011);
\par \hich\af37\dbch\af31505\loch\f37   display.display();
\par \hich\af37\dbch\af31505\loch\f37   delay(200);
\par \hich\af37\dbch\af31505\loch\f37   \hich\af37\dbch\af31505\loch\f37 display.drawCircleQuads(DISPLAY_WIDTH/2, DISPLAY_HEIGHT/2, DISPLAY_HEIGHT/4, 0b00000111);
\par \hich\af37\dbch\af31505\loch\f37   display.display();
\par \hich\af37\dbch\af31505\loch\f37   delay(200);
\par \hich\af37\dbch\af31505\loch\f37   display.drawCircleQuads(DISPLAY_WIDTH/2, DISPLAY_HEIGHT/2, DISPLAY_HEIGHT/4, 0b00001111);
\par \hich\af37\dbch\af31505\loch\f37   display.display();
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 void printBuffe\hich\af37\dbch\af31505\loch\f37 r(void) \{
\par \hich\af37\dbch\af31505\loch\f37   // Initialize the log buffer
\par \hich\af37\dbch\af31505\loch\f37   // allocate memory to store 8 lines of text and 30 chars per line.
\par \hich\af37\dbch\af31505\loch\f37   display.setLogBuffer(5, 30);
\par 
\par \hich\af37\dbch\af31505\loch\f37   // Some test data
\par \hich\af37\dbch\af31505\loch\f37   const char* test[] = \{
\par \hich\af37\dbch\af31505\loch\f37       "Loading...",
\par \hich\af37\dbch\af31505\loch\f37       "Starting up cores..." ,
\par \hich\af37\dbch\af31505\loch\f37       "----",
\par \hich\af37\dbch\af31505\loch\f37     \hich\af37\dbch\af31505\loch\f37   "Initiating wifi...",
\par \hich\af37\dbch\af31505\loch\f37       "Succesfull!",
\par \hich\af37\dbch\af31505\loch\f37       "Connecting...[NETGEAR26]",
\par \hich\af37\dbch\af31505\loch\f37       "Succesfull!",
\par \hich\af37\dbch\af31505\loch\f37       "Local ip 192.168.1.25 ",
\par \hich\af37\dbch\af31505\loch\f37       "Buffering command lines...",
\par \hich\af37\dbch\af31505\loch\f37       "0x89 0xA2 0x67 0xF1",
\par \hich\af37\dbch\af31505\loch\f37       "Executing display test",
\par \hich\af37\dbch\af31505\loch\f37       "0xCA 0xFB 0x14 0xD2",
\par \hich\af37\dbch\af31505\loch\f37       "0xAA 0xFC 0x00 0x00 "
\par \hich\af37\dbch\af31505\loch\f37       "",
\par \hich\af37\dbch\af31505\loch\f37       "Execution Complete! ",
\par \hich\af37\dbch\af31505\loch\f37       "Startup complete",
\par \hich\af37\dbch\af31505\loch\f37       "Input a command",
\par \hich\af37\dbch\af31505\loch\f37       " ",
\par \hich\af37\dbch\af31505\loch\f37       " ",
\par \hich\af37\dbch\af31505\loch\f37       " ",
\par \hich\af37\dbch\af31505\loch\f37       " "
\par \hich\af37\dbch\af31505\loch\f37   \};
\par 
\par \hich\af37\dbch\af31505\loch\f37   for (uint8_t i = 0; i < \hich\af37\dbch\af31505\loch\f37 11; i++) \{
\par \hich\af37\dbch\af31505\loch\f37     display.clear();
\par \hich\af37\dbch\af31505\loch\f37     // Print to the screen
\par \hich\af37\dbch\af31505\loch\f37     display.println(test[i]);
\par \hich\af37\dbch\af31505\loch\f37     // Draw it to the internal screen buffer
\par \hich\af37\dbch\af31505\loch\f37     display.drawLogBuffer(0, 0);
\par \hich\af37\dbch\af31505\loch\f37     // Display it on the screen
\par \hich\af37\dbch\af31505\loch\f37     display.display();
\par \hich\af37\dbch\af31505\loch\f37     delay(500);
\par \hich\af37\dbch\af31505\loch\f37   \}
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 void setup() \{
\par \hich\af37\dbch\af31505\loch\f37   display.init();
\par 
\par \hich\af37\dbch\af31505\loch\f37   // display.flipScreenVertically();
\par 
\par \hich\af37\dbch\af31505\loch\f37   display.setContrast(255);
\par \hich\af37\dbch\af31505\loch\f37   
\par \hich\af37\dbch\af31505\loch\f37   printBuffer();
\par \hich\af37\dbch\af31505\loch\f37   delay(1000);
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par \hich\af37\dbch\af31505\loch\f37   delay(1000)
\par 
\par \hich\af37\dbch\af31505\loch\f37   drawLines();
\par \hich\af37\dbch\af31505\loch\f37   delay(1000);
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par 
\par \hich\af37\dbch\af31505\loch\f37   drawRect();
\par \hich\af37\dbch\af31505\loch\f37   delay(1000);
\par \hich\af37\dbch\af31505\loch\f37   displa\hich\af37\dbch\af31505\loch\f37 y.clear();
\par 
\par \hich\af37\dbch\af31505\loch\f37   fillRect();
\par \hich\af37\dbch\af31505\loch\f37   delay(1000);
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par 
\par \hich\af37\dbch\af31505\loch\f37   drawCircle();
\par \hich\af37\dbch\af31505\loch\f37   delay(1000);
\par \hich\af37\dbch\af31505\loch\f37   display.clear();
\par 
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 void loop() \{ \}
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid8723897 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid8723897 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid7028035 \hich\af31502\dbch\af31501\loch\f31502 SD CARD READER TEST
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7028035 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid7028035\charrsid7028035 \hich\af31506\dbch\af31505\loch\f31506 /*
\par \hich\af31506\dbch\af31505\loch\f31506  * Connect the SD card to the following pins:
\par \hich\af31506\dbch\af31505\loch\f31506  *
\par \hich\af31506\dbch\af31505\loch\f31506  * SD Card | ESP32
\par \hich\af31506\dbch\af31505\loch\f31506  *    D2       -
\par \hich\af31506\dbch\af31505\loch\f31506  *    D3       SS
\par \hich\af31506\dbch\af31505\loch\f31506  *    CMD      MOSI
\par \hich\af31506\dbch\af31505\loch\f31506  *    VSS      GND
\par \hich\af31506\dbch\af31505\loch\f31506  *    VDD      3.3V
\par \hich\af31506\dbch\af31505\loch\f31506  *    CLK      SCK
\par \hich\af31506\dbch\af31505\loch\f31506  *    VSS      GND
\par \hich\af31506\dbch\af31505\loch\f31506  *    D0       MISO
\par \hich\af31506\dbch\af31505\loch\f31506  *    D1       -
\par \hich\af31506\dbch\af31505\loch\f31506  */
\par \hich\af31506\dbch\af31505\loch\f31506 #include "FS.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "SD.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "SPI.h"
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void listDir(fs::FS &fs, const char * dirname, uin\hich\af31506\dbch\af31505\loch\f31506 t8_t levels)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Listing directory: %s\\n", dirname);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     File root = fs.open(dirname);
\par \hich\af31506\dbch\af31505\loch\f31506     if(!root)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Failed to open directory");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     if(!root.isDirectory())\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Not a directory");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     File file = root.openNextFile();
\par \hich\af31506\dbch\af31505\loch\f31506     while(file)\{
\par \hich\af31506\dbch\af31505\loch\f31506         if(file.isDirectory())\{
\par \hich\af31506\dbch\af31505\loch\f31506             Serial.print("  DIR : ");
\par \hich\af31506\dbch\af31505\loch\f31506             Serial.println(file.name());
\par \hich\af31506\dbch\af31505\loch\f31506             if(levels)\{
\par \hich\af31506\dbch\af31505\loch\f31506  \hich\af31506\dbch\af31505\loch\f31506                listDir(fs, file.name(), levels -1);
\par \hich\af31506\dbch\af31505\loch\f31506             \}
\par \hich\af31506\dbch\af31505\loch\f31506         \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506             Serial.print("  FILE: ");
\par \hich\af31506\dbch\af31505\loch\f31506             Serial.print(file.name());
\par \hich\af31506\dbch\af31505\loch\f31506             Serial.print("  SIZE: ");
\par \hich\af31506\dbch\af31505\loch\f31506             Serial.println(file.size());
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506        \hich\af31506\dbch\af31505\loch\f31506  file = root.openNextFile();
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void createDir(fs::FS &fs, const char * path)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Creating Dir: %s\\n", path);
\par \hich\af31506\dbch\af31505\loch\f31506     if(fs.mkdir(path))\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Dir created");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("mkdir failed");
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void removeDir(fs::FS &fs, const char * path)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Removing Dir: %s\\n", path);
\par \hich\af31506\dbch\af31505\loch\f31506     if(fs.rmdir(path))\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Dir removed");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("rmdir failed"\hich\af31506\dbch\af31505\loch\f31506 );
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void readFile(fs::FS &fs, const char * path)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Reading file: %s\\n", path);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     File file = fs.open(path);
\par \hich\af31506\dbch\af31505\loch\f31506     if(!file)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Failed to open file for reading");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("Read\hich\af31506\dbch\af31505\loch\f31506  from file: ");
\par \hich\af31506\dbch\af31505\loch\f31506     while(file.available())\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.write(file.read());
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     file.close();
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void writeFile(fs::FS &fs, const char * path, const char * message)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Writing file: %s\\n", path);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     Fi\hich\af31506\dbch\af31505\loch\f31506 le file = fs.open(path, FILE_WRITE);
\par \hich\af31506\dbch\af31505\loch\f31506     if(!file)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Failed to open file for writing");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     if(file.print(message))\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("File written");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Write failed");
\par \hich\af31506\dbch\af31505\loch\f31506  \hich\af31506\dbch\af31505\loch\f31506    \}
\par \hich\af31506\dbch\af31505\loch\f31506     file.close();
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void appendFile(fs::FS &fs, const char * path, const char * message)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Appending to file: %s\\n", path);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     File file = fs.open(path, FILE_APPEND);
\par \hich\af31506\dbch\af31505\loch\f31506     if(!file)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Failed to open file for \hich\af31506\dbch\af31505\loch\f31506 appending");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     if(file.print(message))\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Message appended");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Append failed");
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     file.close();
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void renameFile(fs::FS &fs, const char * path1, const char * path2)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Renaming file %s to %s\\n", path1, path2);
\par \hich\af31506\dbch\af31505\loch\f31506     if (fs.rename(path1, path2)) \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("File renamed");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Rename failed"\hich\af31506\dbch\af31505\loch\f31506 );
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void deleteFile(fs::FS &fs, const char * path)\{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Deleting file: %s\\n", path);
\par \hich\af31506\dbch\af31505\loch\f31506     if(fs.remove(path))\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("File deleted");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Delete failed");
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void testFileIO(fs::\hich\af31506\dbch\af31505\loch\f31506 FS &fs, const char * path)\{
\par \hich\af31506\dbch\af31505\loch\f31506     File file = fs.open(path);
\par \hich\af31506\dbch\af31505\loch\f31506     static uint8_t buf[512];
\par \hich\af31506\dbch\af31505\loch\f31506     size_t len = 0;
\par \hich\af31506\dbch\af31505\loch\f31506     uint32_t start = millis();
\par \hich\af31506\dbch\af31505\loch\f31506     uint32_t end = start;
\par \hich\af31506\dbch\af31505\loch\f31506     if(file)\{
\par \hich\af31506\dbch\af31505\loch\f31506         len = file.size();
\par \hich\af31506\dbch\af31505\loch\f31506         size_t flen = len;
\par \hich\af31506\dbch\af31505\loch\f31506         start = millis();
\par \hich\af31506\dbch\af31505\loch\f31506         while(len)\{
\par \hich\af31506\dbch\af31505\loch\f31506             size_t toRead = len;
\par \hich\af31506\dbch\af31505\loch\f31506             if(toRead > 512)\{
\par \hich\af31506\dbch\af31505\loch\f31506                 toRead = 512;
\par \hich\af31506\dbch\af31505\loch\f31506             \}
\par \hich\af31506\dbch\af31505\loch\f31506             file.read(buf, toRead);
\par \hich\af31506\dbch\af31505\loch\f31506             len -= toRead;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         end = millis() - start\hich\af31506\dbch\af31505\loch\f31506 ;
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.printf("%u bytes read for %u ms\\n", flen, end);
\par \hich\af31506\dbch\af31505\loch\f31506         file.close();
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Failed to open file for reading");
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     file = fs.open(path, FILE_WRITE);
\par \hich\af31506\dbch\af31505\loch\f31506     if(!file)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Failed to op\hich\af31506\dbch\af31505\loch\f31506 en file for writing");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     size_t i;
\par \hich\af31506\dbch\af31505\loch\f31506     start = millis();
\par \hich\af31506\dbch\af31505\loch\f31506     for(i=0; i<2048; i++)\{
\par \hich\af31506\dbch\af31505\loch\f31506         file.write(buf, 512);
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     end = millis() - start;
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("%u bytes written for %u ms\\\hich\af31506\dbch\af31505\loch\f31506 n", 2048 * 512, end);
\par \hich\af31506\dbch\af31505\loch\f31506     file.close();
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void setup()\{}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid7028035 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6645915 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915\charrsid6645915 
\hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915 \hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915\charrsid6645915 
\hich\af31506\dbch\af31505\loch\f31506 pinMode(12, OUTPUT);    //Display LED PWM
\par \hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915 \hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915\charrsid6645915 
\hich\af31506\dbch\af31505\loch\f31506 pinMode(14, OUTPUT);    //Display On/Off/Vcc Transistor
\par \hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915 \hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915\charrsid6645915 
\hich\af31506\dbch\af31505\loch\f31506 digitalWrite(12, HIGH); //Start Display at 100% Brightness
\par \hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915 \hich\af31506\dbch\af31505\loch\f31506   }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915\charrsid6645915 
\hich\af31506\dbch\af31505\loch\f31506 digitalWrite(14, HIGH); //\hich\af31506\dbch\af31505\loch\f31506 Start Display GPU.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6645915\charrsid7028035 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7028035 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid7028035\charrsid7028035 
\hich\af31506\dbch\af31505\loch\f31506     Serial.begin(115200);
\par \hich\af31506\dbch\af31505\loch\f31506     if(!SD.begin(15))\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("Card Mount Failed");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     uint8_t cardType = SD.cardType();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if(cardType == CARD_NONE)\{
\par \hich\af31506\dbch\af31505\loch\f31506      \hich\af31506\dbch\af31505\loch\f31506    Serial.println("No SD card attached");
\par \hich\af31506\dbch\af31505\loch\f31506         return;
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.print("SD Card Type: ");
\par \hich\af31506\dbch\af31505\loch\f31506     if(cardType == CARD_MMC)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("MMC");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else if(cardType == CARD_SD)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("SDSC");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else if(cardType == CARD_SDHC)\{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("SDHC");
\par \hich\af31506\dbch\af31505\loch\f31506     \} else \{
\par \hich\af31506\dbch\af31505\loch\f31506         Serial.println("UNKNOWN");
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     uint64_t cardSize = SD.cardSize() / (1024 * 1024);
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("SD Card Size: %lluMB\\n", \hich\af31506\dbch\af31505\loch\f31506 cardSize);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     listDir(SD, "/", 0);
\par \hich\af31506\dbch\af31505\loch\f31506     createDir(SD, "/mydir");
\par \hich\af31506\dbch\af31505\loch\f31506     listDir(SD, "/", 0);
\par \hich\af31506\dbch\af31505\loch\f31506     removeDir(SD, "/mydir");
\par \hich\af31506\dbch\af31505\loch\f31506     listDir(SD, "/", 2);
\par \hich\af31506\dbch\af31505\loch\f31506     writeFile(SD, "/hello.txt", "Hello ");
\par \hich\af31506\dbch\af31505\loch\f31506     appendFile(SD, "/hello.txt", "World!\\n");
\par \hich\af31506\dbch\af31505\loch\f31506     readFile(SD, "/hel\hich\af31506\dbch\af31505\loch\f31506 lo.txt");
\par \hich\af31506\dbch\af31505\loch\f31506     deleteFile(SD, "/foo.txt");
\par \hich\af31506\dbch\af31505\loch\f31506     renameFile(SD, "/hello.txt", "/foo.txt");
\par \hich\af31506\dbch\af31505\loch\f31506     readFile(SD, "/foo.txt");
\par \hich\af31506\dbch\af31505\loch\f31506     testFileIO(SD, "/test.txt");
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void loop()\{
\par 
\par \}
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid8723897 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid3364407 \hich\af31502\dbch\af31501\loch\f31502 PWM 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3364407 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid3364407\charrsid3364407 \hich\af31506\dbch\af31505\loch\f31506 int freq = 5000;
\par \hich\af31506\dbch\af31505\loch\f31506 int ledChannel = 0;
\par \hich\af31506\dbch\af31505\loch\f31506 int resolution = 8;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void setup() \{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 ledcSetup(ledChannel, freq, resolution);
\par \hich\af31506\dbch\af31505\loch\f31506 ledcAttachPin(12, ledChannel);
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void loop() \{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 for (int dutyCycle = 0; dutyCycle <= 255; dutyCycle++)\{
\par \hich\af31506\dbch\af31505\loch\f31506 ledcWrite(ledChannel, dutyCycle);
\par \hich\af31506\dbch\af31505\loch\f31506 delay(7);
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 for (int dutyCycle = 255; dutyCycle >= 0; duty\hich\af31506\dbch\af31505\loch\f31506 Cycle--)\{
\par \hich\af31506\dbch\af31505\loch\f31506 ledcWrite(ledChannel, dutyCycle);
\par \hich\af31506\dbch\af31505\loch\f31506 delay(7);
\par \}
\par \}
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid8723897 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid15490038 \hich\af31502\dbch\af31501\loch\f31502 MIC I2S}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\lang9\langfe1033\langnp9\insrsid14491986 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14491986 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid14491986\charrsid14491986 \hich\af31506\dbch\af31505\loch\f31506 #include "driver/i2s.h"
\par \hich\af31506\dbch\af31505\loch\f31506 const i2s_port_t I2S_PORT = I2S_NUM_0;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void setup() \{
\par \hich\af31506\dbch\af31505\loch\f31506  \hich\af31506\dbch\af31505\loch\f31506  Serial.begin(115200);
\par \hich\af31506\dbch\af31505\loch\f31506   esp_err_t err;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   // The I2S config as per the example
\par \hich\af31506\dbch\af31505\loch\f31506   const i2s_config_t i2s_config = \{
\par \hich\af31506\dbch\af31505\loch\f31506       .mode = i2s_mode_t(I2S_MODE_MASTER | I2S_MODE_RX), // Receive, not transfer
\par \hich\af31506\dbch\af31505\loch\f31506       .sample_rate = 4000,                         // 16KHz
\par \hich\af31506\dbch\af31505\loch\f31506       .bits_per_sample = I2S_BITS_PER_SAMPLE_32BIT, // could only get it to work with 32bits
\par \hich\af31506\dbch\af31505\loch\f31506       .channel_format = I2S_CHANNEL_FMT_ONLY_LEFT, // use right channel
\par \hich\af31506\dbch\af31505\loch\f31506       .communication_format = i\hich\af31506\dbch\af31505\loch\f31506 2s_comm_format_t(I2S_COMM_FORMAT_I2S | I2S_COMM_FORMAT_I2S_MSB),
\par \hich\af31506\dbch\af31505\loch\f31506       .intr_alloc_flags = ESP_INTR_FLAG_LEVEL1,     // Interrupt level 1
\par \hich\af31506\dbch\af31505\loch\f31506       .dma_buf_count = 4,                           // number of buffers
\par \hich\af31506\dbch\af31505\loch\f31506       .dma_buf_len = 8                       \hich\af31506\dbch\af31505\loch\f31506        // 8 samples per buffer (minimum)
\par \hich\af31506\dbch\af31505\loch\f31506   \};
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   // The pin config as per the setup
\par \hich\af31506\dbch\af31505\loch\f31506   const i2s_pin_config_t pin_config = \{
\par \hich\af31506\dbch\af31505\loch\f31506       .bck_io_num = 26,   // Serial Clock (SCK)
\par \hich\af31506\dbch\af31505\loch\f31506       .ws_io_num = 25,    // Word Select (WS)
\par \hich\af31506\dbch\af31505\loch\f31506       .data_out_num = I2S_PIN_NO_CHANG\hich\af31506\dbch\af31505\loch\f31506 E, // not used (only for speakers)
\par \hich\af31506\dbch\af31505\loch\f31506       .data_in_num = 34   // Serial Data (SD)
\par \hich\af31506\dbch\af31505\loch\f31506   \};
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   // Configuring the I2S driver and pins.
\par \hich\af31506\dbch\af31505\loch\f31506   // This function must be called before any I2S driver read/write operations.
\par \hich\af31506\dbch\af31505\loch\f31506   err = i2s_driver_install(I2S_PORT, &i2s_config\hich\af31506\dbch\af31505\loch\f31506 , 0, NULL);
\par \hich\af31506\dbch\af31505\loch\f31506   if (err != ESP_OK) \{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Failed installing driver: %d\\n", err);
\par \hich\af31506\dbch\af31505\loch\f31506     while (true);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \hich\af31506\dbch\af31505\loch\f31506   err = i2s_set_pin(I2S_PORT, &pin_config);
\par \hich\af31506\dbch\af31505\loch\f31506   if (err != ESP_OK) \{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.printf("Failed setting pin: %d\\n", err);
\par \hich\af31506\dbch\af31505\loch\f31506     while (true);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println("I2S driver installed.");
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void loop() \{
\par \hich\af31506\dbch\af31505\loch\f31506   // Read a single sample and log it for the Serial Plotter.
\par \hich\af31506\dbch\af31505\loch\f31506   int32_t sample = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   int bytes_read = i2s_pop_sample(I2S_PORT, (char *)&sample, portMAX_DELAY); // no timeout
\par \hich\af31506\dbch\af31505\loch\f31506   if (bytes_read > 0) \{
\par \hich\af31506\dbch\af31505\loch\f31506     Serial.println(sample);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \}}{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid14491986\charrsid14491986 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid14491986 \page }{\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid15490038 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid8723897 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid8723897 \hich\af31502\dbch\af31501\loch\f31502 D\hich\af31502\dbch\af31501\loch\f31502 
ISPLAY TEST
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8723897 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid8723897\charrsid8723897 \hich\af31506\dbch\af31505\loch\f31506 
/***************************************************
\par \hich\af31506\dbch\af31505\loch\f31506   This i\hich\af31506\dbch\af31505\loch\f31506 s our GFX example for the Adafruit ILI9341 Breakout and Shield
\par \hich\af31506\dbch\af31505\loch\f31506   ----> http://www.adafruit.com/products/1651
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Check out the links above for our tutorials and wiring diagrams
\par \hich\af31506\dbch\af31505\loch\f31506   These displays use SPI to communicate, 4 or 5 pins are required to
\par \hich\af31506\dbch\af31505\loch\f31506   interface\hich\af31506\dbch\af31505\loch\f31506  (RST is optional)
\par \hich\af31506\dbch\af31505\loch\f31506   Adafruit invests time and resources providing this open source code,
\par \hich\af31506\dbch\af31505\loch\f31506   please support Adafruit and open-source hardware by purchasing
\par \hich\af31506\dbch\af31505\loch\f31506   products from Adafruit!
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Written by Limor Fried/Ladyada for Adafruit Industries.
\par \hich\af31506\dbch\af31505\loch\f31506   MIT license, all text above must be included in any redistribution
\par \hich\af31506\dbch\af31505\loch\f31506  ****************************************************/
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 #include "SPI.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "Adafruit_GFX.h"
\par \hich\af31506\dbch\af31505\loch\f31506 #include "Adafruit_ILI9341.h"
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // For the Adafruit shield, these are the default.
\par \hich\af31506\dbch\af31505\loch\f31506 #define TFT_DC 2
\par \hich\af31506\dbch\af31505\loch\f31506 #define TFT_CS 27
\par \hich\af31506\dbch\af31505\loch\f31506 #define TFT_MOSI 23 
\par \hich\af31506\dbch\af31505\loch\f31506 #define TFT_CLK 18
\par \hich\af31506\dbch\af31505\loch\f31506 #define TFT_RST -1
\par \hich\af31506\dbch\af31505\loch\f31506 #define TFT_MISO 19
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // Use hardware SPI (on Uno, #13, #12, #11) and the above for CS/DC
\par \hich\af31506\dbch\af31505\loch\f31506 //Adafruit_ILI9341 t\hich\af31506\dbch\af31505\loch\f31506 ft = Adafruit_ILI9341(TFT_CS, TFT_DC);
\par \hich\af31506\dbch\af31505\loch\f31506 // If using the breakout, change pins as desired
\par \hich\af31506\dbch\af31505\loch\f31506 Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI, TFT_CLK, TFT_RST, TFT_MISO);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void setup() \{
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.begin(115200);
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println("ILI9341 Test!")\hich\af31506\dbch\af31505\loch\f31506 ; 
\par \hich\af31506\dbch\af31505\loch\f31506   pinMode(12, OUTPUT);
\par \hich\af31506\dbch\af31505\loch\f31506   pinMode(14, OUTPUT);
\par \hich\af31506\dbch\af31505\loch\f31506   digitalWrite(12, HIGH);
\par \hich\af31506\dbch\af31505\loch\f31506   digitalWrite(14, HIGH);
\par \hich\af31506\dbch\af31505\loch\f31506  
\par \hich\af31506\dbch\af31505\loch\f31506   tft.begin();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   // read diagnostics (optional but can help debug problems)
\par \hich\af31506\dbch\af31505\loch\f31506   uint8_t x = tft.readcommand8(ILI9341_RDMODE);
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Display Power Mode: 0x"); Serial.println(x, HEX);
\par \hich\af31506\dbch\af31505\loch\f31506   x = tft.readcommand8(ILI9341_RDMADCTL);
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("MADCTL Mode: 0x"); Serial.println(x, HEX);
\par \hich\af31506\dbch\af31505\loch\f31506   x = tft.readcommand8(ILI9341_RDPIXFMT);
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Pixel Format: 0x"); Serial.println(x, HEX);
\par \hich\af31506\dbch\af31505\loch\f31506   x = tft.readcommand8(ILI9341_RDIMGFMT);
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Image Format: 0x"); Serial.println(x, HEX);
\par \hich\af31506\dbch\af31505\loch\f31506   x = tft.readcommand8(ILI9341_RDSELFDIAG);
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print("Self Diagnostic: 0x"); Serial.pri\hich\af31506\dbch\af31505\loch\f31506 ntln(x, HEX); 
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(F("Benchmark                Time (microseconds)"));
\par \hich\af31506\dbch\af31505\loch\f31506   delay(10);
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Screen fill              "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testFillScreen());
\par \hich\af31506\dbch\af31505\loch\f31506   //delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Text                     "));
\par \hich\af31506\dbch\af31505\loch\f31506   Seria\hich\af31506\dbch\af31505\loch\f31506 l.println(testText());
\par \hich\af31506\dbch\af31505\loch\f31506   delay(3000);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Lines                    "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testLines(ILI9341_CYAN));
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Horiz/Vert Lines         "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testFastLines(ILI9341_RED, ILI9341_BLUE));
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Rectangles (outline)     "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testRects(ILI9341_GREEN));
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Rectangles (filled)      "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testFille\hich\af31506\dbch\af31505\loch\f31506 dRects(ILI9341_YELLOW, ILI9341_MAGENTA));
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Circles (filled)         "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testFilledCircles(10, ILI9341_MAGENTA));
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Circles (outline)        "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testCircles(10, ILI9341_WHI\hich\af31506\dbch\af31505\loch\f31506 TE));
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Triangles (outline)      "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testTriangles());
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Triangles (filled)       "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testFilledTriangles());
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Rounded rects (outline)  "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testRoundRects());
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.print(F("Rounded rects (filled)   "));
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(testFilledRoundRects());
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   Serial.println(F("Done!"));
\par 
\par \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void loop(void) \{
\par \hich\af31506\dbch\af31505\loch\f31506   for(uint8_t rotation=0; rotation<4; rotation++) \{
\par \hich\af31506\dbch\af31505\loch\f31506     tft.setRotation(rotation);
\par \hich\af31506\dbch\af31505\loch\f31506     testText();
\par \hich\af31506\dbch\af31505\loch\f31506     delay(1000);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testFillScreen() \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9\hich\af31506\dbch\af31505\loch\f31506 341_RED);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_GREEN);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLUE);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testText() \{
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setCursor(0, 0);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("Hello World!");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setTextColor(ILI9341_YELLOW); tft.setTextSize(2);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println(1234.56);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setTextColor(ILI9341_RED);    tft.setTextSize(3);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println(0xDEADBEEF, HEX);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setTextColor(ILI9341_GREEN);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setTextSize(5);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("Groop");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setTextSize(2);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("I implore thee,");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.setText\hich\af31506\dbch\af31505\loch\f31506 Size(1);
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("my foonting turlingdromes.");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("And hooptiously drangle me");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("with crinkly bindlewurdles,");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("Or I will rend thee");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("in the gobberwarts");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("with my blurglecruncheon,");
\par \hich\af31506\dbch\af31505\loch\f31506   tft.println("see if I don't!");
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testLines(uint16_t color) \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start, t;
\par \hich\af31506\dbch\af31505\loch\f31506   int           x1, y1, x2, y2,
\par \hich\af31506\dbch\af31505\loch\f31506                 w = tft.width(),
\par \hich\af31506\dbch\af31505\loch\f31506                \hich\af31506\dbch\af31505\loch\f31506  h = tft.height();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506   x1 = y1 = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   y2    = h - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
\par \hich\af31506\dbch\af31505\loch\f31506   x2    = w - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, colo\hich\af31506\dbch\af31505\loch\f31506 r);
\par \hich\af31506\dbch\af31505\loch\f31506   t     = micros() - start; // fillScreen doesn't count against timing
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   x1    = w - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   y1    = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   y2    = h - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
\par \hich\af31506\dbch\af31505\loch\f31506   x2    = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, color);
\par \hich\af31506\dbch\af31505\loch\f31506   t    += micros() - start;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   x1    = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   y1    = h - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   y2\hich\af31506\dbch\af31505\loch\f31506     = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
\par \hich\af31506\dbch\af31505\loch\f31506   x2    = w - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, color);
\par \hich\af31506\dbch\af31505\loch\f31506   t    += micros() - start;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506  \hich\af31506\dbch\af31505\loch\f31506  x1    = w - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   y1    = h - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   y2    = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
\par \hich\af31506\dbch\af31505\loch\f31506   x2    = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, color);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   yield();
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testFastLines(uint16_t color1, uint16_t color2) \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start;
\par \hich\af31506\dbch\af31505\loch\f31506   int           x, y, w = tft.width(), h = tft.height();
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.f\hich\af31506\dbch\af31505\loch\f31506 illScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(y=0; y<h; y+=5) tft.drawFastHLine(0, y, w, color1);
\par \hich\af31506\dbch\af31505\loch\f31506   for(x=0; x<w; x+=5) tft.drawFastVLine(x, 0, h, color2);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testRects(uint16_t color) \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start\hich\af31506\dbch\af31505\loch\f31506 ;
\par \hich\af31506\dbch\af31505\loch\f31506   int           n, i, i2,
\par \hich\af31506\dbch\af31505\loch\f31506                 cx = tft.width()  / 2,
\par \hich\af31506\dbch\af31505\loch\f31506                 cy = tft.height() / 2;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   n     = min(tft.width(), tft.height());
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(i=2; i<n; i+=6) \{
\par \hich\af31506\dbch\af31505\loch\f31506     i2 = i / 2;
\par \hich\af31506\dbch\af31505\loch\f31506     tft\hich\af31506\dbch\af31505\loch\f31506 .drawRect(cx-i2, cy-i2, i, i, color);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testFilledRects(uint16_t color1, uint16_t color2) \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start, t = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   int           n, i, i2,
\par \hich\af31506\dbch\af31505\loch\f31506                 cx = tft.width()  / 2 - 1,
\par \hich\af31506\dbch\af31505\loch\f31506                 cy\hich\af31506\dbch\af31505\loch\f31506  = tft.height() / 2 - 1;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   n = min(tft.width(), tft.height());
\par \hich\af31506\dbch\af31505\loch\f31506   for(i=n; i>0; i-=6) \{
\par \hich\af31506\dbch\af31505\loch\f31506     i2    = i / 2;
\par \hich\af31506\dbch\af31505\loch\f31506     start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506     tft.fillRect(cx-i2, cy-i2, i, i, color1);
\par \hich\af31506\dbch\af31505\loch\f31506     t    += micros() - start;
\par \hich\af31506\dbch\af31505\loch\f31506     // Outlines ar\hich\af31506\dbch\af31505\loch\f31506 e not included in timing results
\par \hich\af31506\dbch\af31505\loch\f31506     tft.drawRect(cx-i2, cy-i2, i, i, color2);
\par \hich\af31506\dbch\af31505\loch\f31506     yield();
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return t;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testFilledCircles(uint8_t radius, uint16_t color) \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start;
\par \hich\af31506\dbch\af31505\loch\f31506   int x, y, w = tf\hich\af31506\dbch\af31505\loch\f31506 t.width(), h = tft.height(), r2 = radius * 2;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(x=radius; x<w; x+=r2) \{
\par \hich\af31506\dbch\af31505\loch\f31506     for(y=radius; y<h; y+=r2) \{
\par \hich\af31506\dbch\af31505\loch\f31506       tft.fillCircle(x, y, radius, color);
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned l\hich\af31506\dbch\af31505\loch\f31506 ong testCircles(uint8_t radius, uint16_t color) \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start;
\par \hich\af31506\dbch\af31505\loch\f31506   int           x, y, r2 = radius * 2,
\par \hich\af31506\dbch\af31505\loch\f31506                 w = tft.width()  + radius,
\par \hich\af31506\dbch\af31505\loch\f31506                 h = tft.height() + radius;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   // Screen is not cleared for this one -- this is
\par \hich\af31506\dbch\af31505\loch\f31506   // i\hich\af31506\dbch\af31505\loch\f31506 ntentional and does not affect the reported time.
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(x=0; x<w; x+=r2) \{
\par \hich\af31506\dbch\af31505\loch\f31506     for(y=0; y<h; y+=r2) \{
\par \hich\af31506\dbch\af31505\loch\f31506       tft.drawCircle(x, y, radius, color);
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testTriangles() \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start;
\par \hich\af31506\dbch\af31505\loch\f31506   int           n, i, cx = tft.width()  / 2 - 1,
\par \hich\af31506\dbch\af31505\loch\f31506                       cy = tft.height() / 2 - 1;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   n     = min(cx, cy);
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(i=0; i<n; i+=5) \{
\par \hich\af31506\dbch\af31505\loch\f31506   \hich\af31506\dbch\af31505\loch\f31506   tft.drawTriangle(
\par \hich\af31506\dbch\af31505\loch\f31506       cx    , cy - i, // peak
\par \hich\af31506\dbch\af31505\loch\f31506       cx - i, cy + i, // bottom left
\par \hich\af31506\dbch\af31505\loch\f31506       cx + i, cy + i, // bottom right
\par \hich\af31506\dbch\af31505\loch\f31506       tft.color565(i, i, i));
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testFilledTriangles() \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start, t = 0;
\par \hich\af31506\dbch\af31505\loch\f31506   int           i, cx = tft.width()  / 2 - 1,
\par \hich\af31506\dbch\af31505\loch\f31506                    cy = tft.height() / 2 - 1;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(i=min(cx,cy); i>10; i-=5) \{
\par \hich\af31506\dbch\af31505\loch\f31506     star\hich\af31506\dbch\af31505\loch\f31506 t = micros();
\par \hich\af31506\dbch\af31505\loch\f31506     tft.fillTriangle(cx, cy - i, cx - i, cy + i, cx + i, cy + i,
\par \hich\af31506\dbch\af31505\loch\f31506       tft.color565(0, i*10, i*10));
\par \hich\af31506\dbch\af31505\loch\f31506     t += micros() - start;
\par \hich\af31506\dbch\af31505\loch\f31506     tft.drawTriangle(cx, cy - i, cx - i, cy + i, cx + i, cy + i,
\par \hich\af31506\dbch\af31505\loch\f31506       tft.color565(i*10, i*10, 0));
\par \hich\af31506\dbch\af31505\loch\f31506     yield();
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return t;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testRoundRects() \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigned long start;
\par \hich\af31506\dbch\af31505\loch\f31506   int           w, i, i2,
\par \hich\af31506\dbch\af31505\loch\f31506                 cx = tft.width()  / 2 - 1,
\par \hich\af31506\dbch\af31505\loch\f31506                 cy = tft.height() / 2 - 1;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   w     = min(tft.width(), tft.height());
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(i=0; i<w; i+=6) \{
\par \hich\af31506\dbch\af31505\loch\f31506     i2 = i / 2;
\par \hich\af31506\dbch\af31505\loch\f31506     tft.drawRoundRect(cx-i2, cy-i2, i, i, i/8, tft.color565(i, 0, 0));
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 unsigned long testFilledRoundRects() \{
\par \hich\af31506\dbch\af31505\loch\f31506   unsigne\hich\af31506\dbch\af31505\loch\f31506 d long start;
\par \hich\af31506\dbch\af31505\loch\f31506   int           i, i2,
\par \hich\af31506\dbch\af31505\loch\f31506                 cx = tft.width()  / 2 - 1,
\par \hich\af31506\dbch\af31505\loch\f31506                 cy = tft.height() / 2 - 1;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   tft.fillScreen(ILI9341_BLACK);
\par \hich\af31506\dbch\af31505\loch\f31506   start = micros();
\par \hich\af31506\dbch\af31505\loch\f31506   for(i=min(tft.width(), tft.height()); i>20; i-=6) \{
\par \hich\af31506\dbch\af31505\loch\f31506     i2 = i / 2;
\par \hich\af31506\dbch\af31505\loch\f31506     tft.f\hich\af31506\dbch\af31505\loch\f31506 illRoundRect(cx-i2, cy-i2, i, i, i/8, tft.color565(0, i, 0));
\par \hich\af31506\dbch\af31505\loch\f31506     yield();
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   return micros() - start;
\par \}}{\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid8723897 
\par }{\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid6037358 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sl259\slmult1\keep\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid6037358 \rtlch\fcs1 \af0\afs32\alang1025 \ltrch\fcs0 
\fs32\cf19\lang1033\langfe1033\loch\af31502\hich\af31502\dbch\af31501\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \lang9\langfe1033\langnp9\insrsid6037358 \hich\af31502\dbch\af31501\loch\f31502 LED TEST}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\lang9\langfe1033\langnp9\insrsid6037358\charrsid6037358 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8723897 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid6037358 
\par }\pard \ltrpar\ql \li0\ri0\sa160\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6037358 {\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid6037358\charrsid6037358 
\hich\af31506\dbch\af31505\loch\f31506 #include <Adafruit_NeoPixel.h>
\par \hich\af31506\dbch\af31505\loch\f31506 #ifdef __AVR__
\par \hich\af31506\dbch\af31505\loch\f31506   #include <avr/power.h>
\par \hich\af31506\dbch\af31505\loch\f31506 #endif
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 #define PIN 0
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 #define NUM_LEDS 3
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 #define BRIGHTNESS 100
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, PIN, NEO_GRBW + NEO_KHZ800);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 byte neopix_gamma[] = \{
\par \hich\af31506\dbch\af31505\loch\f31506     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
\par \hich\af31506\dbch\af31505\loch\f31506     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1\hich\af31506\dbch\af31505\loch\f31506 ,  1,  1,
\par \hich\af31506\dbch\af31505\loch\f31506     1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,
\par \hich\af31506\dbch\af31505\loch\f31506     2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,
\par \hich\af31506\dbch\af31505\loch\f31506     5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10,
\par \hich\af31506\dbch\af31505\loch\f31506    10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14\hich\af31506\dbch\af31505\loch\f31506 , 14, 15, 15, 16, 16,
\par \hich\af31506\dbch\af31505\loch\f31506    17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 24, 24, 25,
\par \hich\af31506\dbch\af31505\loch\f31506    25, 26, 27, 27, 28, 29, 29, 30, 31, 32, 32, 33, 34, 35, 35, 36,
\par \hich\af31506\dbch\af31505\loch\f31506    37, 38, 39, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 50,
\par \hich\af31506\dbch\af31505\loch\f31506    51, 52, 54, 55, 56, 57, 58, 59\hich\af31506\dbch\af31505\loch\f31506 , 60, 61, 62, 63, 64, 66, 67, 68,
\par \hich\af31506\dbch\af31505\loch\f31506    69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89,
\par \hich\af31506\dbch\af31505\loch\f31506    90, 92, 93, 95, 96, 98, 99,101,102,104,105,107,109,110,112,114,
\par \hich\af31506\dbch\af31505\loch\f31506   115,117,119,120,122,124,126,127,129,131,133,135,137,138,140,142,
\par \hich\af31506\dbch\af31505\loch\f31506   144,146,148,150,152,154,156,158,160,162,164,167,169,171,173,175,
\par \hich\af31506\dbch\af31505\loch\f31506   177,180,182,184,186,189,191,193,196,198,200,203,205,208,210,213,
\par \hich\af31506\dbch\af31505\loch\f31506   215,218,220,223,225,228,231,233,236,239,241,244,247,2\hich\af31506\dbch\af31505\loch\f31506 49,252,255 \};
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void setup() \{
\par }\pard \ltrpar\ql \li0\ri0\sa160\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16677273 {\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid6037358\charrsid6037358 
\hich\af31506\dbch\af31505\loch\f31506    pinMode(21, OUTPUT); 
\par \hich\af31506\dbch\af31505\loch\f31506    digitalWrite(21, HIGH);
\par }\pard \ltrpar\ql \li0\ri0\sa160\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6037358 {\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid6037358\charrsid6037358 
\hich\af31506\dbch\af31505\loch\f31506  \hich\af31506\dbch\af31505\loch\f31506  // This is for Trinket 5V 16MHz, you can remove these three lines if you are not using a Trinket
\par \hich\af31506\dbch\af31505\loch\f31506   #if defined (__AVR_ATti\hich\af31506\dbch\af31505\loch\f31506 ny85__)
\par \hich\af31506\dbch\af31505\loch\f31506     if (F_CPU == 16000000) clock_prescale_set(clock_div_1);
\par \hich\af31506\dbch\af31505\loch\f31506   #endif
\par \hich\af31506\dbch\af31505\loch\f31506   // End of trinket special code
\par \hich\af31506\dbch\af31505\loch\f31506   strip.setBrightness(BRIGHTNESS);
\par \hich\af31506\dbch\af31505\loch\f31506   strip.begin();
\par \hich\af31506\dbch\af31505\loch\f31506   strip.show(); // Initialize all pixels to 'off'
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void loop() \{
\par \hich\af31506\dbch\af31505\loch\f31506   // Some example procedure\hich\af31506\dbch\af31505\loch\f31506 s showing how to display to the pixels:
\par \hich\af31506\dbch\af31505\loch\f31506   colorWipe(strip.Color(255, 0, 0), 50); // Red
\par \hich\af31506\dbch\af31505\loch\f31506   colorWipe(strip.Color(0, 255, 0), 50); // Green
\par \hich\af31506\dbch\af31505\loch\f31506   colorWipe(strip.Color(0, 0, 255), 50); // Blue
\par \hich\af31506\dbch\af31505\loch\f31506   colorWipe(strip.Color(0, 0, 0, 255), 50); // White
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   whiteOverRainbow(20,75,5);  
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   pulseWhite(5); 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   // fullWhite();
\par \hich\af31506\dbch\af31505\loch\f31506   // delay(2000);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   rainbowFade2White(3,3,1);
\par 
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // Fill the dots one after the other with a color
\par \hich\af31506\dbch\af31505\loch\f31506 void colorWipe(uint32_t c, uint8_t wait) \{
\par \hich\af31506\dbch\af31505\loch\f31506   for(uint16_t i=0; i<strip.numPixels(); i\hich\af31506\dbch\af31505\loch\f31506 ++) \{
\par \hich\af31506\dbch\af31505\loch\f31506     strip.setPixelColor(i, c);
\par \hich\af31506\dbch\af31505\loch\f31506     strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506     delay(wait);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void pulseWhite(uint8_t wait) \{
\par \hich\af31506\dbch\af31505\loch\f31506   for(int j = 0; j < 256 ; j++)\{
\par \hich\af31506\dbch\af31505\loch\f31506       for(uint16_t i=0; i<strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506           strip.setPixelColor(i, strip.Color(0,0,0, neopix_g\hich\af31506\dbch\af31505\loch\f31506 amma[j] ) );
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         delay(wait);
\par \hich\af31506\dbch\af31505\loch\f31506         strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506       \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   for(int j = 255; j >= 0 ; j--)\{
\par \hich\af31506\dbch\af31505\loch\f31506       for(uint16_t i=0; i<strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506           strip.setPixelColor(i, strip.Color(0,0,0, neopix_gamma[j] ) );
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         delay(wait);
\par \hich\af31506\dbch\af31505\loch\f31506         strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506       \}
\par \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void rainbowFade2White(uint8_t wait, int rainbowLoops, int whiteLoops) \{
\par \hich\af31506\dbch\af31505\loch\f31506   float fadeMax = 100.0;
\par \hich\af31506\dbch\af31505\loch\f31506   int fadeVal = 0;
\par \hich\af31506\dbch\af31505\loch\f31506  \hich\af31506\dbch\af31505\loch\f31506  uint32_t wheelVal;
\par \hich\af31506\dbch\af31505\loch\f31506   int redVal, greenVal, blueVal;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   for(int k = 0 ; k < rainbowLoops ; k ++)\{
\par \hich\af31506\dbch\af31505\loch\f31506     
\par \hich\af31506\dbch\af31505\loch\f31506     for(int j=0; j<256; j++) \{ // 5 cycles of all colors on wheel
\par 
\par \hich\af31506\dbch\af31505\loch\f31506       for(int i=0; i< strip.numPixels(); i++) \{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         wheelVal = Wheel(((i * 256 / \hich\af31506\dbch\af31505\loch\f31506 strip.numPixels()) + j) & 255);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         redVal = red(wheelVal) * float(fadeVal/fadeMax);
\par \hich\af31506\dbch\af31505\loch\f31506         greenVal = green(wheelVal) * float(fadeVal/fadeMax);
\par \hich\af31506\dbch\af31505\loch\f31506         blueVal = blue(wheelVal) * float(fadeVal/fadeMax);
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         strip.setPixelColor( i, strip.Color( redVal, greenVal, blueVal ) );
\par 
\par \hich\af31506\dbch\af31505\loch\f31506       \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506       //First loop, fade in!
\par \hich\af31506\dbch\af31505\loch\f31506       if(k == 0 && fadeVal < fadeMax-1) \{
\par \hich\af31506\dbch\af31505\loch\f31506           fadeVal++;
\par \hich\af31506\dbch\af31505\loch\f31506       \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506       //L\hich\af31506\dbch\af31505\loch\f31506 ast loop, fade out!
\par \hich\af31506\dbch\af31505\loch\f31506       else if(k == rainbowLoops - 1 && j > 255 - fadeMax )\{
\par \hich\af31506\dbch\af31505\loch\f31506           fadeVal--;
\par \hich\af31506\dbch\af31505\loch\f31506       \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506         delay(wait);
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   for(int k = 0 ; k < whiteLoops ; k ++)\{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     for(int j = 0; j < 256 ; j++)\{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         for(uint16_t i=0; i < strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506             strip.setPixelColor(i, strip.Color(0,0,0, neopix_gamma[j] ) );
\par \hich\af31506\dbch\af31505\loch\f31506           \}
\par \hich\af31506\dbch\af31505\loch\f31506           strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         delay(2000);
\par \hich\af31506\dbch\af31505\loch\f31506     for(int j = 255; \hich\af31506\dbch\af31505\loch\f31506 j >= 0 ; j--)\{
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         for(uint16_t i=0; i < strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506             strip.setPixelColor(i, strip.Color(0,0,0, neopix_gamma[j] ) );
\par \hich\af31506\dbch\af31505\loch\f31506           \}
\par \hich\af31506\dbch\af31505\loch\f31506           strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   delay(500);
\par 
\par 
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void whiteOverRainbow(uint8_t wait, uin\hich\af31506\dbch\af31505\loch\f31506 t8_t whiteSpeed, uint8_t whiteLength ) \{
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506   if(whiteLength >= strip.numPixels()) whiteLength = strip.numPixels() - 1;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   int head = whiteLength - 1;
\par \hich\af31506\dbch\af31505\loch\f31506   int tail = 0;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   int loops = 3;
\par \hich\af31506\dbch\af31505\loch\f31506   int loopNum = 0;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   static unsigned long lastTime = 0;
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   while(true)\{
\par \hich\af31506\dbch\af31505\loch\f31506     for(int j=0; j<256; j++) \{
\par \hich\af31506\dbch\af31505\loch\f31506       for(uint16_t i=0; i<strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506         if((i >= tail && i <= head) || (tail > head && i >= tail) || (tail > head && i <= head) )\{
\par \hich\af31506\dbch\af31505\loch\f31506           strip.setP\hich\af31506\dbch\af31505\loch\f31506 ixelColor(i, strip.Color(0,0,0, 255 ) );
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         else\{
\par \hich\af31506\dbch\af31505\loch\f31506           strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         
\par \hich\af31506\dbch\af31505\loch\f31506       \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506       if(millis() - lastTime > whiteSpeed) \{
\par \hich\af31506\dbch\af31505\loch\f31506         head++;
\par \hich\af31506\dbch\af31505\loch\f31506         tail++;
\par \hich\af31506\dbch\af31505\loch\f31506   \hich\af31506\dbch\af31505\loch\f31506       if(head == strip.numPixels())\{
\par \hich\af31506\dbch\af31505\loch\f31506           loopNum++;
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par \hich\af31506\dbch\af31505\loch\f31506         lastTime = millis();
\par \hich\af31506\dbch\af31505\loch\f31506       \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506       if(loopNum == loops) return;
\par \hich\af31506\dbch\af31505\loch\f31506     
\par \hich\af31506\dbch\af31505\loch\f31506       head%=strip.numPixels();
\par \hich\af31506\dbch\af31505\loch\f31506       tail%=strip.numPixels();
\par \hich\af31506\dbch\af31505\loch\f31506         strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506         delay(wait);
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 void fullWhite() \{
\par \hich\af31506\dbch\af31505\loch\f31506   
\par \hich\af31506\dbch\af31505\loch\f31506     for(uint16_t i=0; i<strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506         strip.setPixelColor(i, strip.Color(0,0,0, 255 ) );
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506       strip.show();
\par \}
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // Slightly different, this makes the rainbow equally distr\hich\af31506\dbch\af31505\loch\f31506 ibuted throughout
\par \hich\af31506\dbch\af31505\loch\f31506 void rainbowCycle(uint8_t wait) \{
\par \hich\af31506\dbch\af31505\loch\f31506   uint16_t i, j;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   for(j=0; j<256 * 5; j++) \{ // 5 cycles of all colors on wheel
\par \hich\af31506\dbch\af31505\loch\f31506     for(i=0; i< strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506       strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506     delay(wait);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 void rainbow(uint8_t wait) \{
\par \hich\af31506\dbch\af31505\loch\f31506   uint16_t i, j;
\par 
\par \hich\af31506\dbch\af31505\loch\f31506   for(j=0; j<256; j++) \{
\par \hich\af31506\dbch\af31505\loch\f31506     for(i=0; i<strip.numPixels(); i++) \{
\par \hich\af31506\dbch\af31505\loch\f31506       strip.setPixelColor(i, Wheel((i+j) & 255));
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par \hich\af31506\dbch\af31505\loch\f31506     strip.show();
\par \hich\af31506\dbch\af31505\loch\f31506     delay(wait);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 // Input a value 0 to 255 to get a color value.
\par \hich\af31506\dbch\af31505\loch\f31506 // The colours are a transition r - g - b - back to r.
\par \hich\af31506\dbch\af31505\loch\f31506 uint32_t Wheel(byte WheelPos) \{
\par \hich\af31506\dbch\af31505\loch\f31506   WheelPos = 255 - WheelPos;
\par \hich\af31506\dbch\af31505\loch\f31506   if(WheelPos < 85) \{
\par \hich\af31506\dbch\af31505\loch\f31506     return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3,0);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \hich\af31506\dbch\af31505\loch\f31506   if(WheelPos < 170) \{
\par \hich\af31506\dbch\af31505\loch\f31506     WheelPos -= 85;
\par \hich\af31506\dbch\af31505\loch\f31506     return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3,0);
\par \hich\af31506\dbch\af31505\loch\f31506   \}
\par \hich\af31506\dbch\af31505\loch\f31506   WheelPos -= 170;
\par \hich\af31506\dbch\af31505\loch\f31506   return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0,0);
\par \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 uint8_t red(uint32_t c) \{
\par \hich\af31506\dbch\af31505\loch\f31506   return (c >> 16);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 uint8_t green(uint32_t c) \{
\par \hich\af31506\dbch\af31505\loch\f31506   return (c >> 8);
\par \}
\par \hich\af31506\dbch\af31505\loch\f31506 uint8_t blue(uint32_t c) \{
\par \hich\af31506\dbch\af31505\loch\f31506   return (c);
\par \}}{\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang9\langfe1033\langnp9\insrsid6037358\charrsid8723897 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b030414000600080000002100b6f4679893070000c9200000160000007468656d652f7468656d652f
7468656d65312e786d6cec59cd8b1bc915bf07f23f347d97f5d5ad8fc1f2a24fcfda33b6b164873dd648a5eef2547789aad28cc56208de532e81c026e49085bd
ed21842cecc22eb9e48f31d8249b3f22afaa5bdd5552c99e191c3061463074977eefd5afde7bf5de53d5ddcf5e26d4bbc05c1096f6fcfa9d9aefe174ce16248d
7afeb3d9a4d2f13d2151ba4094a5b8e76fb0f03fbbf7eb5fdd454732c609f6403e1547a8e7c752ae8eaa5531876124eeb0154ee1bb25e30992f0caa3ea82a34b
d09bd06aa3566b55134452df4b51026a1f2f97648ebd9952e9dfdb2a1f53784da5500373caa74a35b6243476715e5708b11143cabd0b447b3eccb3609733fc52
fa1e4542c2173dbfa6fffceabdbb5574940b517940d6909be8bf5c2e17589c37f49c3c3a2b260d823068f50bfd1a40e53e6edc1eb7c6ad429f06a0f91c569a71
b175b61bc320c71aa0ecd1a17bd41e35eb16ded0dfdce3dc0fd5c7c26b50a63fd8c34f2643b0a285d7a00c1feee1c3417730b2f56b50866fede1dbb5fe28685b
fa3528a6243ddf43d7c25673b85d6d0159327aec8477c360d26ee4ca4b144443115d6a8a254be5a1584bd00bc6270050408a24493db959e1259a43140f112567
9c7827248a21f056286502866b8ddaa4d684ffea13e827ed5174849121ad780113b137a4f87862cec94af6fc07a0d537206f7ffef9cdeb1fdfbcfee9cd575fbd
79fdf77c6eadca923b466964cafdf2dd1ffef3cd6fbd7ffff0ed2f5fff319b7a172f4cfcbbbffdeedd3ffef93ef5b0e2d2146ffff4fdbb1fbf7ffbe7dfffebaf
5f3bb4f7393a33e1339260e13dc297de5396c0021dfcf119bf9ec42c46c494e8a791402952b338f48f656ca11f6d10450edc00db767cce21d5b880f7d72f2cc2
d398af2571687c182716f094313a60dc6985876a2ec3ccb3751ab927e76b13f714a10bd7dc43945a5e1eaf579063894be530c616cd2714a5124538c5d253dfb1
738c1dabfb8210cbaea764ce99604be97d41bc01224e93ccc899154da5d03149c02f1b1741f0b7659bd3e7de8051d7aa47f8c246c2de40d4417e86a965c6fb68
2d51e252394309350d7e8264ec2239ddf0b9891b0b099e8e3065de78818570c93ce6b05ec3e90f21cdb8dd7e4a37898de4929cbb749e20c64ce4889d0f6394ac
5cd829496313fbb938871045de13265df05366ef10f50e7e40e941773f27d872f787b3c133c8b026a53240d4376beef0e57dccacf89d6ee8126157aae9f3c44a
b17d4e9cd131584756689f604cd1255a60ec3dfbdcc160c05696cd4bd20f62c82ac7d815580f901dabea3dc5027a25d5dcece7c91322ac909de2881de073bad9
493c1b9426881fd2fc08bc6eda7c0ca52e7105c0633a3f37818f08f480102f4ea33c16a0c308ee835a9fc4c82a60ea5db8e375c32dff5d658fc1be7c61d1b8c2
be04197c6d1948eca6cc7b6d3343d49aa00c9819822ec3956e41c4727f29a28aab165b3be596f6a62ddd00dd91d5f42424fd6007b4d3fb84ffbbde073a8cb77f
f9c6b10f3e4ebfe3566c25ab6b763a8792c9f14e7f7308b7dbd50c195f904fbfa919a175fa04431dd9cf58b73dcd6d4fe3ffdff73487f6f36d2773a8dfb8ed64
7ce8306e3b99fc70e5e3743265f3027d8d3af0c80e7af4b14f72f0d46749289dca0dc527421ffc08f83db398c0a092d3279eb838055cc5f0a8ca1c4c60e1228e
b48cc799fc0d91f134462b381daafb4a492472d591f0564cc0a1911e76ea5678ba4e4ed9223becacd7d5c16656590592e5782d2cc6e1a04a66e856bb3cc02bd4
6bb6913e68dd1250b2d721614c6693683a48b4b783ca48fa58178ce620a157f65158741d2c3a4afdd6557b2c805ae115f8c1edc1cff49e1f06200242701e07cd
f942f92973f5d6bbda991fd3d3878c69450034d8db08283ddd555c0f2e4fad2e0bb52b78da2261849b4d425b46377822869fc17974aad1abd0b8aeafbba54b2d
7aca147a3e08ad9246bbf33e1637f535c8ede6069a9a9982a6de65cf6f35430899395af5fc251c1ac363b282d811ea3717a211dcbccc25cf36fc4d32cb8a0b39
4222ce0cae934e960d122231f728497abe5a7ee1069aea1ca2b9d51b90103e59725d482b9f1a3970baed64bc5ce2b934dd6e8c284b67af90e1b35ce1fc568bdf
1cac24d91adc3d8d1797de195df3a708422c6cd795011744c0dd413db3e682c0655891c8caf8db294c79da356fa3740c65e388ae62945714339967709dca0b3a
faadb081f196af190c6a98242f8467912ab0a651ad6a5a548d8cc3c1aafb6121653923699635d3ca2aaa6abab39835c3b60cecd8f26645de60b53531e434b3c2
67a97b37e576b7b96ea74f28aa0418bcb09fa3ea5ea12018d4cac92c6a8af17e1a56393b1fb56bc776811fa07695226164fdd656ed8edd8a1ae19c0e066f54f9
416e376a6168b9ed2bb5a5f5adb979b1cdce5e40f2184197bba6526857c2c92e47d0104d754f92a50dd8222f65be35e0c95b73d2f3bfac85fd60d80887955a27
1c57826650ab74c27eb3d20fc3667d1cd66ba341e31514161927f530bbb19fc00506dde4f7f67a7cefee3ed9ded1dc99b3a4caf4dd7c5513d777f7f5c6e1bb7b
8f40d2f9b2d598749bdd41abd26df627956034e854bac3d6a0326a0ddba3c9681876ba9357be77a1c141bf390c5ae34ea5551f0e2b41aba6e877ba9576d068f4
8376bf330efaaff23606569ea58fdc16605ecdebde7f010000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d65
2f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d36
3f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e
3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d985
0528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c020000130000000000000000000000
0000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b00000000000000000000
000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c0000000000000000000000000019020000
7468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d0014000600080000002100b6f4679893070000c92000001600000000000000
000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b01000027000000
000000000000000000009d0a00007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000980b00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax376\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 5;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 9;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 1;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 2;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 3;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 4;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 5;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 6;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 7;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 8;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 header;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footer;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index heading;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of figures;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope return;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation reference;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 line number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 page number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote text;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of authorities;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 macro;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 toa heading;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 5;\lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Closing;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Signature;\lsdsemihidden1 \lsdunhideused1 \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 4;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Message Header;\lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Salutation;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Date;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Note Heading;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Block Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 FollowedHyperlink;\lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Document Map;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Plain Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 E-mail Signature;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Top of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal (Web);\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Acronym;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Cite;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Code;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Definition;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Keyboard;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Preformatted;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Sample;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Typewriter;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Variable;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation subject;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 No List;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Balloon Text;\lsdpriority39 \lsdlocked0 Table Grid;
\lsdsemihidden1 \lsdlocked0 Placeholder Text;\lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdpriority60 \lsdlocked0 Light Shading;\lsdpriority61 \lsdlocked0 Light List;\lsdpriority62 \lsdlocked0 Light Grid;
\lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdpriority65 \lsdlocked0 Medium List 1;\lsdpriority66 \lsdlocked0 Medium List 2;\lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdpriority70 \lsdlocked0 Dark List;\lsdpriority71 \lsdlocked0 Colorful Shading;\lsdpriority72 \lsdlocked0 Colorful List;\lsdpriority73 \lsdlocked0 Colorful Grid;\lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;
\lsdsemihidden1 \lsdlocked0 Revision;\lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdpriority62 \lsdlocked0 Light Grid Accent 2;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;
\lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdpriority62 \lsdlocked0 Light Grid Accent 3;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;
\lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdpriority62 \lsdlocked0 Light Grid Accent 5;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdpriority41 \lsdlocked0 Plain Table 1;\lsdpriority42 \lsdlocked0 Plain Table 2;\lsdpriority43 \lsdlocked0 Plain Table 3;\lsdpriority44 \lsdlocked0 Plain Table 4;
\lsdpriority45 \lsdlocked0 Plain Table 5;\lsdpriority40 \lsdlocked0 Grid Table Light;\lsdpriority46 \lsdlocked0 Grid Table 1 Light;\lsdpriority47 \lsdlocked0 Grid Table 2;\lsdpriority48 \lsdlocked0 Grid Table 3;\lsdpriority49 \lsdlocked0 Grid Table 4;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;
\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;
\lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdpriority47 \lsdlocked0 List Table 2;\lsdpriority48 \lsdlocked0 List Table 3;\lsdpriority49 \lsdlocked0 List Table 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful;\lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 List Table 2 Accent 2;\lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdpriority49 \lsdlocked0 List Table 4 Accent 2;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;\lsdpriority47 \lsdlocked0 List Table 2 Accent 4;
\lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;
\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdpriority48 \lsdlocked0 List Table 3 Accent 5;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdpriority49 \lsdlocked0 List Table 4 Accent 6;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hashtag;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Unresolved Mention;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Link;}}{\*\datastore 01050000
02000000180000004d73786d6c322e534158584d4c5265616465722e362e30000000000000000000000e0000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff0900060000000000000000000000010000000100000000000000001000000200000001000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdffffff04000000feffffff05000000fefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffff010000000c6ad98892f1d411a65f0040963251e50000000000000000000000005072
49484498d70103000000c0020000000000004d0073006f004400610074006100530074006f0072006500000000000000000000000000000000000000000000000000000000000000000000000000000000001a000101ffffffffffffffff020000000000000000000000000000000000000000000000507249484498d701
507249484498d701000000000000000000000000de0031004d00d000330047004900dc00cd00c400c600d90059005400d10031003100d9004e00c0004f0041003d003d000000000000000000000000000000000032000101ffffffffffffffff030000000000000000000000000000000000000000000000507249484498
d701507249484498d7010000000000000000000000004900740065006d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000201ffffffff04000000ffffffff000000000000000000000000000000000000000000000000
00000000000000000000000000000000320100000000000001000000020000000300000004000000feffffff060000000700000008000000090000000a000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d226e6f223f3e3c623a536f757263657320786d6c6e733a623d22687474703a2f2f736368656d61732e6f70656e78
6d6c666f726d6174732e6f72672f6f6666696365446f63756d656e742f323030362f6269626c696f6772617068792220786d6c6e733d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f6f6666696365446f63756d656e742f323030362f6269626c696f677261706879222053656c
65637465645374796c653d225c415041536978746845646974696f6e4f66666963654f6e6c696e652e78736c22205374796c654e616d653d22415041222056657273696f6e3d2236223e3c2f623a536f75726365733e00000000000000000000000000003c3f786d6c2076657273696f6e3d22312e302220656e636f6469
6e673d225554462d3822207374616e64616c6f6e653d226e6f223f3e0d0a3c64733a6461746173746f72654974656d2064733a6974656d49443d227b37343330423346392d334336322d343942362d423936312d3343354236463933363033387d2220786d6c6e733a64733d22687474703a2f2f736368656d61732e6f70
656e786d6c666f726d6174732e6f72672f6f6666696365446f63756d656e742f323030362f637573500072006f007000650072007400690065007300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000200ffffffffffffffffffffffff000000000000
0000000000000000000000000000000000000000000000000000000000000500000055010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000746f6d586d6c223e3c64733a736368656d61526566733e3c64733a736368656d615265662064733a7572693d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f7267
2f6f6666696365446f63756d656e742f323030362f6269626c696f677261706879222f3e3c2f64733a736368656d61526566733e3c2f64733a6461746173746f72654974656d3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000105000000000000}}